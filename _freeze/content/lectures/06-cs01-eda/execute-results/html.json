{
  "hash": "fb76f9a03aa7212903a54c6ed53e9a63",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"06-cs01-eda\"\nauthor: \"Professor Shannon Ellis\"\ndate: \"20234-10-02\"\n\nformat:\n  html: \n    output-file: 06-cs01-eda.html\n  revealjs:\n    output-file: 06-cs01-eda-slides.html\n    css: slides.css\n---\n\n::: {.cell}\n\n:::\n\n\n# CS01: Biomarkers of Recent Use (EDA) {background-color=\"#92A86A\"}\n\n## Q&A {.smaller}\n\n> Q: I'm slightly confused about the purpose of this line of code: facet_grid(treatment ~ group) when using facets\\\n> A: `facet_grid` says to create a small multiple plot - meaning break down the overall plot into smaller subsets. Then `treatment ~ group` specifies *how* to do that breakdown. Have each row be a separate `treatment`. Have each column be a separate `group`. Then, in each sublot, plot only the data that pertains to taht treatment x group combination.\n\n> Q: For things we want to alter that are not in ggplot, would we use a different package in combination with ggplot to alter things?\\\n> A: Yup! There are TONS of extensions/add-ons that work well with `ggplot2`. Many are found in additional pacakges, so I'd start there. There is, additionally, plotting in R that happens outside of or is incompatible with `ggplot2`. There are times where you would want to go that route, but we won't need to in this course.\n\n> Q: I am a little confused on how to select the best practices. Are there multiple right answers at times?\\\n> A: There are multiple \"right\" answers. Learn the basics about visual design and then decide in your case which of those rules to follow. It will often be all of them, but if a rule makes reading your particular visualization more difficult to follow, then break the rule in that case. The goal is clear communication and readability.\n\n> Q: My lingering question is if there is support for violin plots. \\\n> A: Yes! There is a geom for that: `geom_violin`\n\n> Q: What I should be looking for/investigating from the case study data\\\n> A: Ultimately, you and your group want to answer the question posed. We'll discuss more about this today!\n\n> Q: I've also used forestplot. Is this something that ggplot can also accomplish? \\\n> A: Yup! There are standalone packages (not ggplot2-compatible) for this, but it's also possible [in `ggplot2    ](https://www.khstats.com/blog/forest-plots/).\n\n## Course Announcements\n\n**Due Dates**:\n\n- 🔬 **Lab 03** due Thursday (10/24; 11:59 PM)\n- 💻 **HW02** (Viz) due Mon (10/28; 11:59 PM)\n- 📋 Lecture Participation survey \"due\" after class\n\n**Notes**:\n\n-   **hw01** and **lab02** scores posted; Scores on Canvas; feedback as \"issue\" on GH\n-   **CS01 Groups** have been sent out\n    -   email for contact \n    -   GitHub repo \\<- please accept and open; make sure you have access; (or try: https://github.com/GHUsername/cs01-fa24-team##/invitations)\n    -   group mate feedback is required (on submission)\n    \n. . . \n\n::: callout-important\nThe CS01 data are data for you only. My collaborator is excited that y'all will be working on this...but these are still research data, so please do not share with others or post publicly.\n:::\n\n## Suggested Reading\n\n- 📕 R4DS Chapter 10: [EDA](https://r4ds.hadley.nz/eda)\n- 📕 R4DS Chapter 25: [Functions](https://r4ds.hadley.nz/functions)\n\n## Agenda\n- CS01\n  - Instructions \n  - Previous Projects\n  - CS01 EDA\n- `tidyr`\n- Exploratory Data Analysis (EDA)\n\n# CS01 {background-color=\"#92A86A\"}\n\n\n## CS01 Instructions \n\nInstructions are on [course website](https://cogs137-fa24.github.io/cogs137-fa24/content/cs/cs01.html).\n\nNote: \n\n- Deliverables: Full report (.html) + general communication\n- [Common Deductions](https://cogs137-fa24.github.io/cogs137-fa24/content/cs/cs01.html)\n\n## Example Case Study\n\nSee & Discuss: [https://cogs137-fa24.github.io/cogs137-fa24/content/cs/cs01.html](https://cogs137-fa24.github.io/cogs137-fa24/content/cs/cs01.html)\n\n## Feedback & Scores\n\nFeedback to other students [here](https://docs.google.com/spreadsheets/d/1GZINOZImtmkRDLGrWrBYVFxPxpK2GewC40_XMelLh1E/edit?usp=sharing)\n\n::: aside\nYou cannot see the projects, but can read all of the comments and see the associated score. Also, note that the same row is not the same group.\n:::\n\n. . . \n\nCommon comments:\n\n-   context/explanation/guidance/lacking\n-   missing citations\n-   failure to introduce/describe the data\n-   making statements without evidence\n-   need to edit for cohesiveness, story, clarity\n\n## An (Example) Rubric\n\nThis is *NOT* the rubric for your case study, but it will be similar:\n\n![](images/06/rubric.png)\n\n\n## Notes\n\n::: incremental\n-   Lots of code/plots will be provided here\n-   You are free to include any of it in your own case study (no attribution needed)\n-   You probably should NOT include all of them in your final report\n-   For any of the \"basic\" plots you include in your report, you'll want to clean them up/improve their design.\n-   Your final report should be polished from start to finish\n:::\n\n# Data Wrangling: `tidyr` {background-color=\"#92A86A\"}\n\n- pivots (`tidyr`)\n- joins (`dplyr`)\n\n## Reminder: Tidy Data\n\n![](images/06/tidydata_1.jpg)\n\n. . . \n\n![](images/06/tidydata_2.jpg)\n\n. . . \n\n![](images/06/tidydata_3.jpg)\n\n\n\n## Pivoting\n\nStoring the same data in a different format\n\n. . . \n\n### long vs. wide\n\n-   **wide** data contains values that do not repeat in the first column. (analysis; storage)\n-   **long** format contains values that do repeat in the first column. (plotting)\n\n\n## pivots\n\n- `pivot_longer` | take wide data and make it long\n- `pivot_wider` | take long data and make it wide\n\n\n## Joins\n\nCombining data across different datasets, using common information (often: IDs)\n\n. . . \n\n**Mutating Joins**\n\nadd new variables to a data frame from matching observations in another\n\n. . . \n\n- **`left_join`**: keeps all rows in first df; adds all matching information from second df; adds NAs for any observations missing information\n- **`right_join`**: keeps all observations in second df \n- **`full_join`**: keeps all observations in either df\n\n. . . \n\n![Image Source: <https://r4ds.had.co.nz/relational-data.html>](images/06/join-outer.png)\n\n. . . \n\n**`inner_join`**: takes only rows in *both* dfs\n\n![Image Source: <https://r4ds.had.co.nz/relational-data.html>](images/06/join-inner.png)\n\n## Binding dataframes\n\n- `bind_rows()` - stack different dataframes on top of one another, combining information where column names are the same <- *what I used to combine the three datasets after wrangling*\n- `bind_cols()` - stack dataframes next to one another; will assume rows match up <- use with caution\n\n\n# Exploratory Data Analysis (EDA) {background-color=\"#92A86A\"}\n\n## EDA\n\nThe process of really getting to \"know\" your data: \n\n- calculating descriptive statistics (min, mean, median, max, etc.)\n- univariate plots (histograms, densityplots, barplots) - distributions of single variables \n- bivariate plots (scatterplots, boxplots) - relationships between variables\n\n. . . \n\nNotes: \n\n:::incremental\n- Not every plot you generate in this process has to end up in your final report, but each plot should help you learn\n- Every plot should NOT be *beautiful*. Save that time for the ones you ultimately use to communicate your findings\n- There is NOT a formula for carrying out EDA. You stop once you understand your data fully.\n- Lab03 is to get you started. Three plots is probably not enough for you to be fully comfortable with these data.\n:::\n\n\n# Data & Files {background-color=\"#92A86A\"}\n\n# Question {background-color=\"#92A86A\"}\n\nWhich compound, in which matrix, and at what cutoff is the best biomarker of recent use?\n\n## Our Datasets\n\nThree matrices:\n\n-   Blood (WB): 8 compounds; 190 participants\n-   Oral Fluid (OF): 7 compounds; 192 participants\n-   Breath (BR): 1 compound; 191 participants\n\n. . . \n\nVariables:\n\n-   `ID` \\| participants identifier\n-   `Treatment` \\| placebo, 5.90%, 13.40%\n-   `Group` \\| Occasional user, Frequent user\n-   `Timepoint` \\| indicator of which point in the timeline participant's collection occurred\n-   `time.from.start` \\| number of minutes from consumption\n-   & measurements for individual compounds\n\n## The Data\n\nReading in the csv provided in lab03/cs01:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncs01_data <- read_csv(\"data/cs01_combined.csv\") |> \n  mutate(treatment = fct_relevel(treatment, \"Placebo\", \"5.9% THC (low dose)\"))\n```\n:::\n\n\n\n# CS01: EDA {background-color=\"#92A86A\"}\n\n## Single Variable (basic) plots\n\n\nFor a single compound...\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(cs01_data, aes(x=thc)) + \n  geom_histogram()\n```\n\n::: {.cell-output-display}\n![](06-cs01-eda_files/figure-html/unnamed-chunk-2-1.png){width=2100}\n:::\n:::\n\n. . . \n\nBut, we have three different matrices...\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(cs01_data, aes(x=thc)) + \n  geom_histogram() +\n  facet_wrap(~fluid_type)\n```\n\n::: {.cell-output-display}\n![](06-cs01-eda_files/figure-html/unnamed-chunk-3-1.png){width=2100}\n:::\n:::\n\n\nBut what if we consider our experiment/the structure of our data? We have three different matrices...and a whole bunch of compounds. With wide data, it's not easy to plot these distributions, so you may want to pivot those data....\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncs01_long <- cs01_data |> \n  select(1:5,time_from_start,everything()) |>\n  pivot_longer(7:15) \n```\n:::\n\n\n. . . \n\nDistributions across all compounds:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(cs01_long, aes(x=value)) + \n  geom_histogram() +\n  facet_wrap(~name)\n```\n\n::: {.cell-output-display}\n![](06-cs01-eda_files/figure-html/unnamed-chunk-5-1.png){width=2100}\n:::\n:::\n\n\n...but this still doesn't get at the differences between matrices *and* compound.\n\n. . . \n\nPlotting some of these data...\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncs01_long |>\n  mutate(group_compound=paste0(fluid_type,\": \", name)) |>\nggplot(aes(x=value)) + \n  geom_histogram() + \n  facet_wrap(~group_compound, scales=\"free\")\n```\n\n::: {.cell-output-display}\n![](06-cs01-eda_files/figure-html/unnamed-chunk-6-1.png){width=2100}\n:::\n:::\n\n\n## THC & Frequency\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncs01_long |> \n  filter(name==\"thc\") |>\n  ggplot(aes(x=group, y=value)) + \n  geom_boxplot() +\n  facet_wrap(~fluid_type, scales=\"free\")\n```\n\n::: {.cell-output-display}\n![](06-cs01-eda_files/figure-html/unnamed-chunk-7-1.png){width=2100}\n:::\n:::\n\n\n## THC & Treatment Group\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncs01_long |> \n  filter(name==\"thc\") |>\n  ggplot(aes(x=treatment, y=value)) + \n  geom_boxplot() +\n  facet_wrap(~fluid_type, scales=\"free\")\n```\n\n::: {.cell-output-display}\n![](06-cs01-eda_files/figure-html/unnamed-chunk-8-1.png){width=2100}\n:::\n:::\n\n\n## Focus on a specific timepoint...\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncs01_long |> \n  filter(name==\"thc\", (timepoint==\"0-30 min\" | timepoint==\"0-40 min\")) |>\n  ggplot(aes(x=treatment, y=value)) + \n  geom_boxplot() +\n  facet_wrap(~fluid_type, scales=\"free\")\n```\n\n::: {.cell-output-display}\n![](06-cs01-eda_files/figure-html/unnamed-chunk-9-1.png){width=2100}\n:::\n:::\n\n\n## At this point...\n\nWe start to get a sense of the data with these quick and dirty plots, but we're really only scratching the surface of what's going on in these data.\n\n. . .\n\nThese data require a lot of exploration due to the number of compounds, multiple matrices, and data over time aspects.\n\n\n## Brief Aside: User-Defined Functions\n\n> You should consider writing a function whenever you’ve copied and pasted a block of code more than twice -Hadley\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfunction_name <- function(input){\n  # operations using input\n}\n```\n:::\n\n\n. . . \n\nFor example...\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndouble_value <- function(val){\n  val * 2\n}\n```\n:::\n\n\n. . . \n\nTo use/execute:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndouble_value(3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 6\n```\n\n\n:::\n:::\n\n\n\nAdditional resource: [https://r4ds.hadley.nz/functions](https://r4ds.hadley.nz/functions)\n\n## Compounds across time\n\n::: panel-tabset\n### Function\n\nOur first user-defined function: \n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_scatter_time <- function(matrix) {\n  cs01_long |> \n      filter(!is.na(time_from_start), fluid_type==matrix) |>\n      ggplot(aes(x=time_from_start, y=value, color=group)) + \n        geom_point() +\n        facet_wrap(~name, scales=\"free\") +\n        scale_color_manual(values=c(\"#19831C\", \"#A27FC9\")) +\n        theme_classic() +\n        labs(title=matrix,\n             x=\"Time From Start (min)\") +\n        theme(legend.position=\"bottom\",\n              legend.title=element_blank(),\n              strip.background=element_blank(),\n              plot.title.position=\"plot\") \n}\n```\n:::\n\n\n\n### Plots (WB)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_scatter_time(matrix=\"WB\")\n```\n\n::: {.cell-output-display}\n![](06-cs01-eda_files/figure-html/compounds-wb-1.png){width=2100}\n:::\n:::\n\n\n### OF\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_scatter_time(matrix=\"OF\")\n```\n\n::: {.cell-output-display}\n![](06-cs01-eda_files/figure-html/compounds-of-1.png){width=2100}\n:::\n:::\n\n\n### BR\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_scatter_time(matrix=\"BR\")\n```\n\n::: {.cell-output-display}\n![](06-cs01-eda_files/figure-html/compounds-br-1.png){width=2100}\n:::\n:::\n\n\n### Thoughts\n\n:::incremental\n- We do NOT have clear delineations in time\n- This means there *could* be multiple measurements from a single individual within a specified timepoint (i.e. \"0-30 min\")\n- We wouldn't want to include duplicate measures from the same individual within timepoint\n- We wouldn't have known this without looking at our data...why EDA is necessary\n:::\n\n:::\n\n\n## Dropping Duplicates (w/n time window)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncs01_nodups <- cs01_data |> \n    filter(!is.na(timepoint)) |> \n    group_by(fluid_type, timepoint) |> \n    distinct(id, .keep_all=TRUE) |> \n    ungroup()\n```\n:::\n\n\n. . . \n\nNow to pivot_longer that...\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncs01_nodups_long <- cs01_nodups |> \n  select(1:5,time_from_start,everything()) |>\n  pivot_longer(7:15) \n```\n:::\n\n\n::: callout-note\nWhile I drop duplicates *after* making the plots above, you and your group will want to think about when it should be done for telling the clearest story. The order we do things in EDA is not typically the order in which we communicate information.\n:::\n\n\n## Group Differences: Frequency of Use\n\n::: panel-tabset\n### Function\n\n\n::: {.cell}\n\n```{.r .cell-code}\nboxplot_frequency_of_use <- function(matrix){\n  cs01_nodups_long |> \n    filter(fluid_type == matrix,\n           timepoint == \"0-30 min\" | timepoint == \"0-40 min\") |>\n  ggplot(aes(x=group, y=value, fill=group)) + \n    geom_jitter(position=position_jitter(width=.3,\n                                        height=0),\n                size=0.8, \n                color=\"gray50\")  +\n    geom_boxplot(outlier.shape=NA, alpha=0.6) +\n    facet_wrap(~name, scales=\"free\") +\n    scale_x_discrete(labels=function(x) str_wrap(x, width=10)) +\n    scale_y_continuous(limits=c(0, NA), \n                       expand=expansion(mult=c(0, 0.1))) +\n    scale_fill_manual(values=c(\"#19831C\", \"#A27FC9\")) +\n    theme_classic() +\n    labs(title=paste0(matrix)) + \n    theme(text=element_text(size=12),\n          legend.position=\"bottom\",\n          legend.title=element_blank(),\n          panel.grid=element_blank(),\n          plot.title.position=\"plot\",\n          strip.background=element_blank())\n}\n```\n:::\n\n\n### WB\n\n\n::: {.cell}\n\n```{.r .cell-code}\nboxplot_frequency_of_use(\"WB\")\n```\n\n::: {.cell-output-display}\n![](06-cs01-eda_files/figure-html/unnamed-chunk-17-1.png){width=2100}\n:::\n:::\n\n\n### OF\n\n\n::: {.cell}\n\n```{.r .cell-code}\nboxplot_frequency_of_use(\"OF\")\n```\n\n::: {.cell-output-display}\n![](06-cs01-eda_files/figure-html/unnamed-chunk-18-1.png){width=2100}\n:::\n:::\n\n\n### BR\n\n\n::: {.cell}\n\n```{.r .cell-code}\nboxplot_frequency_of_use(\"BR\")\n```\n\n::: {.cell-output-display}\n![](06-cs01-eda_files/figure-html/unnamed-chunk-19-1.png){width=2100}\n:::\n:::\n\n\n### Thoughts\n\n::: incremental\n- Certain compounds show different values between frequent and infrequent users. Worth considering what that means for our ultimate goal\n- Breath at this first timepoint likely not very helpful...what about other timepoints?\n:::\n\n:::\n\n## Group Differences: Treatment\n\n::: panel-tabset\n### Function\n\n\n::: {.cell}\n\n```{.r .cell-code}\nboxplot_treatment <- function(matrix){\n  cs01_nodups_long |> \n    filter(fluid_type == matrix,\n           timepoint == \"0-30 min\" | timepoint == \"0-40 min\") |>\n  ggplot(aes(x=treatment, y=value, fill=group)) + \n    geom_jitter(position=position_jitter(width=.3,\n                                        height=0),\n                size=0.8, \n                color=\"gray50\")  +\n    geom_boxplot(outlier.size=0.1, alpha=0.8) +\n    facet_wrap(~name, scales=\"free\") +\n    scale_x_discrete(labels = function(x) str_wrap(x, width = 10)) +\n    scale_y_continuous(limits=c(0, NA), \n                       expand=expansion(mult=c(0, 0.1))) +\n    scale_fill_manual(values=c(\"#19831C\", \"#A27FC9\")) +\n    theme_classic() +\n    labs(title=paste0(matrix), y=\"Measurement (ng/mL)\") + \n    theme(text=element_text(size=12),\n          legend.position=\"bottom\",\n          legend.title=element_blank(),\n          panel.grid=element_blank(),\n          plot.title.position=\"plot\",\n          strip.background=element_blank())\n}\n```\n:::\n\n\n### WB\n\n\n::: {.cell}\n\n```{.r .cell-code}\nboxplot_treatment(\"WB\")\n```\n\n::: {.cell-output-display}\n![](06-cs01-eda_files/figure-html/all-the-plots-treatment-1.png){width=100%}\n:::\n:::\n\n\n### OF\n\n\n::: {.cell}\n\n```{.r .cell-code}\nboxplot_treatment(\"OF\")\n```\n\n::: {.cell-output-display}\n![](06-cs01-eda_files/figure-html/unnamed-chunk-21-1.png){width=100%}\n:::\n:::\n\n\n### BR\n\n\n::: {.cell}\n\n```{.r .cell-code}\nboxplot_treatment(\"BR\")\n```\n\n::: {.cell-output-display}\n![](06-cs01-eda_files/figure-html/unnamed-chunk-22-1.png){width=2100}\n:::\n:::\n\n\n### Thoughts\n\n::: incremental\n- Argument for combining treatment groups? \n- We now have very similar `ggplot2` code across a few plots. This can be improved using`theme_set()`. You set theme parameters at top of Rmd...and then those will apply across all plots.\n- These last two sets of plots have only focused on that first timepoint. You'll probably want to look beyond that. \n:::\n\n:::\n\n# Some Metrics {background-color=\"#92A86A\"}\n\n## Sensitivity & Specificity\n\n**Sensitivity** \\| the ability of a test to correctly identify patients with a disease/trait/condition. $$TP/(TP + FN)$$\n\n. . .\n\n**Specificity** \\| the ability of a test to correctly identify people without the disease/trait/condition. $$TN/(TN + FP)$$\n\n. . .\n\n[❓ For this analysis, do you care more about sensitivity? about specificity? equally about both?]{style=\"background-color: #ADD8E6\"}\n\n## What is a TP here? TN? FP? FN?\n\n**Post-smoking** (cutoff \\> 0)\n\n::: incremental\n-   TP = THC group, value \\>= cutoff\n-   FN = THC group, value \\< cutoff\n-   FP = Placebo group, value \\>= cutoff\n-   TN = Placebo group, value \\< cutoff\n:::\n\n. . .\n\n**Post-smoking** (cutoff == 0)\n\nCannot be a TP or FP if zero...\n\n-   TP = THC group, value \\> cutoff),\n-   FN = THC group, value \\<= cutoff),\n-   FP = Placebo group, value \\> cutoff),\n-   TN = Placebo group, value \\< cutoff)\n\n. . .\n\n**Pre-smoking**\n\nCannot be a TP or FN before consuming...\n\n-   TP = 0\n-   FN = 0\n-   FP = value \\>= cutoff\n-   TN = value \\< cutoff\n\n## The Code to come\n\n::: callout-warning\nThis is beyond code I would expect you all to be able to write yourself. It's here so that 1) you can make these calculations and interpret the results,  2) because we have a wide range of background and experience. I want *everyone* to get as much as they can out of this course,  and 3) I do want you all to talk to one another. That's one reason you all are in groups for case studies.\n:::\n\n\n## Calculating Sensitivity and Specificity\n\n::: panel-tabset\n### Calculate\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmake_calculations <- function(dataset, cutoff, compound, timepoint_use){\n  ## remove NAs\n  df <- dataset |>\n    select(treatment, {{ compound }}, timepoint) |>\n    filter(timepoint == timepoint_use, !is.na({{ compound }}))\n\n  if(nrow(df)>0){\n    if(timepoint_use == \"pre-smoking\"){\n      output <- df |> \n        summarize(TP = 0,\n                  FN = 0,\n                  FP = sum(!!sym(compound) >= cutoff),\n                  TN = sum(!!sym(compound) < cutoff)) \n    }else{\n      if(cutoff == 0){\n        output_pre <- df |> \n          filter(timepoint_use == \"pre-smoking\") |>\n          summarize(TP = 0,\n                    FN = 0,\n                    FP = sum(!!sym(compound) >= cutoff),\n                    TN = sum(!!sym(compound) < cutoff)) \n        \n        output <- df |> \n          filter(timepoint_use != \"pre-smoking\") |>\n          summarize(TP = sum(treatment != \"Placebo\" & !!sym(compound) > cutoff),\n                    FN = sum(treatment != \"Placebo\" & !!sym(compound) <= cutoff),\n                    FP = sum(treatment == \"Placebo\" & !!sym(compound) > cutoff),\n                    TN = sum(treatment == \"Placebo\" & !!sym(compound) < cutoff))\n        \n        output <- output + output_pre\n      }else{\n        output_pre <- df |> \n          filter(timepoint_use == \"pre-smoking\") |>\n          summarise(TP = 0,\n                    FN = 0,\n                    FP = sum(!!sym(compound) >= cutoff),\n                    TN = sum(!!sym(compound) < cutoff)) \n        \n        output <- df |> \n          filter(timepoint_use != \"pre-smoking\") |>\n          summarise(TP = sum(treatment != \"Placebo\" & !!sym(compound) >= cutoff),\n                    FN = sum(treatment != \"Placebo\" & !!sym(compound) < cutoff),\n                    FP = sum(treatment == \"Placebo\" & !!sym(compound) >= cutoff),\n                    TN = sum(treatment == \"Placebo\" & !!sym(compound) < cutoff))\n        \n        output <- output + output_pre\n      }\n    }\n  \n  # clean things up; make calculations on above values\n  output <- output |>\n    mutate(detection_limit = cutoff,\n           compound = compound,\n           time_window = timepoint_use,\n           NAs = nrow(dataset) - nrow(df),\n           N = nrow(dataset),\n           Sensitivity = (TP/(TP + FN)), \n           Specificity = (TN /(TN + FP)),\n           PPV = (TP/(TP+FP)),\n           NPV = (TN/(TN + FN)),\n           Efficiency = ((TP + TN)/(TP + TN + FP + FN))*100\n    )\n  return(output)\n}\n}\n```\n:::\n\n\n\n::: callout-note\n`\\{{ compound }\\}` is used to refer to the argument stored in the compound parameter; `!!sym(compound)` is used to dynamically refer to the column whose name is stored in compound. `sym()` converts the string in compound into a symbol that refers to the column, and `!!` unquotes it to evaluate the column in the expression.\n:::\n\n### Apply\n\nMap the above for each matrix...\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsens_spec_cpd <- function(dataset, cpd, timepoints){\n  args2 <- list(start = timepoints$start, \n                stop = timepoints$stop, \n                tpt_use = timepoints$timepoint)\n  out <- args2 |> \n    pmap_dfr(make_calculations, dataset, compound = cpd)\n  return(out)\n}\n```\n:::\n\n\n### Run\n\n-   determine what cutoff values to try\n-   carry out above function on those cutoffs\n\n:::\n\n## Calculate\n\nReminder: Currently, states have laws on the books from zero tolerance (detection of any level) to 5ng/mL THC\n\n::: panel-tabset\n### WB\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# specify which calculations to make\ncutoffs <- c(0.5, 1, 2, 5, 10)\ncompounds <- cs01_nodups_long |> filter(fluid_type==\"WB\") |> filter(!is.na(value)) |> distinct(name) |> pull(name)\nWB_timepoints <- c(\"pre-smoking\",\"0-30 min\",\"31-70 min\", \"71-100 min\",\"101-180 min\",\"181-210 min\", \"211-240 min\",\"241-270 min\", \"271-300 min\", \"301+ min\") \nWB <- cs01_data |> filter(fluid_type==\"WB\")\n\n# Specify all parameter combinations\nparam_grid <- expand.grid(\n  cutoffs = cutoffs,\n  compounds = compounds,\n  timepoint_use = WB_timepoints)\n\n\n# Calculate for all cutoff-compound-timepoint combinations\nWB_ss <- purrr::pmap_dfr(param_grid, ~ make_calculations(dataset=WB, cutoff = ..1, compound = as.character(..2), timepoint_use = ..3))\n\nWB_ss\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 400 × 14\n      TP    FN    FP    TN detection_limit compound time_window   NAs     N\n   <dbl> <dbl> <int> <int>           <dbl> <chr>    <fct>       <int> <int>\n 1     0     0     1   188             0.5 cbn      pre-smoking  1336  1525\n 2     0     0     0   189             1   cbn      pre-smoking  1336  1525\n 3     0     0     0   189             2   cbn      pre-smoking  1336  1525\n 4     0     0     0   189             5   cbn      pre-smoking  1336  1525\n 5     0     0     0   189            10   cbn      pre-smoking  1336  1525\n 6     0     0     4   185             0.5 cbd      pre-smoking  1336  1525\n 7     0     0     1   188             1   cbd      pre-smoking  1336  1525\n 8     0     0     1   188             2   cbd      pre-smoking  1336  1525\n 9     0     0     0   189             5   cbd      pre-smoking  1336  1525\n10     0     0     0   189            10   cbd      pre-smoking  1336  1525\n# ℹ 390 more rows\n# ℹ 5 more variables: Sensitivity <dbl>, Specificity <dbl>, PPV <dbl>,\n#   NPV <dbl>, Efficiency <dbl>\n```\n\n\n:::\n:::\n\n\n### OF\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# specify which calculations to make\ncutoffs <- c(0.5, 1, 2, 5, 10)\ncompounds <- cs01_nodups_long |> filter(fluid_type==\"OF\") |> filter(!is.na(value)) |> distinct(name) |> pull(name)\nOF_timepoints <- c(\"pre-smoking\",\"0-30 min\",\"31-90 min\",\n                   \"91-180 min\", \"181-210 min\", \"211-240 min\",\n                   \"241-270 min\", \"271+ min\") \nOF <- cs01_data |> filter(fluid_type==\"OF\")\n\n# Specify all parameter combinations\nparam_grid <- expand.grid(\n  cutoffs = cutoffs,\n  compounds = compounds,\n  timepoint_use = OF_timepoints)\n\n# Calculate for all cutoff-compound-timepoint combinations\nOF_ss <- purrr::pmap_dfr(param_grid, ~ make_calculations(dataset=OF, cutoff = ..1, compound = as.character(..2), timepoint_use = ..3))\n\nOF_ss\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 210 × 14\n      TP    FN    FP    TN detection_limit compound time_window   NAs     N\n   <dbl> <dbl> <int> <int>           <dbl> <chr>    <fct>       <int> <int>\n 1     0     0     5   187             0.5 cbn      pre-smoking   761   953\n 2     0     0     1   191             1   cbn      pre-smoking   761   953\n 3     0     0     1   191             2   cbn      pre-smoking   761   953\n 4     0     0     1   191             5   cbn      pre-smoking   761   953\n 5     0     0     0   192            10   cbn      pre-smoking   761   953\n 6     0     0     4   188             0.5 cbd      pre-smoking   761   953\n 7     0     0     1   191             1   cbd      pre-smoking   761   953\n 8     0     0     1   191             2   cbd      pre-smoking   761   953\n 9     0     0     0   192             5   cbd      pre-smoking   761   953\n10     0     0     0   192            10   cbd      pre-smoking   761   953\n# ℹ 200 more rows\n# ℹ 5 more variables: Sensitivity <dbl>, Specificity <dbl>, PPV <dbl>,\n#   NPV <dbl>, Efficiency <dbl>\n```\n\n\n:::\n:::\n\n\n### BR\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# specify which calculations to make\ncutoffs <- c(0.5, 1, 2, 5, 10)\ncompounds <- cs01_nodups_long |> filter(fluid_type==\"BR\") |> filter(!is.na(value)) |> distinct(name) |> pull(name)\nBR_timepoints <- c(\"pre-smoking\",\"0-40 min\",\"41-90 min\",\n                   \"91-180 min\", \"181-210 min\", \"211-240 min\",\n                   \"241-270 min\", \"271+ min\")\nBR <- cs01_data |> filter(fluid_type==\"BR\")\n\n# Specify all parameter combinations\nparam_grid <- expand.grid(\n  cutoffs = cutoffs,\n  compounds = compounds,\n  timepoint_use = OF_timepoints)\n\n# Calculate for all cutoff-compound-timepoint combinations\nBR_ss <- purrr::pmap_dfr(param_grid, ~ make_calculations(dataset=BR, cutoff = ..1, compound = as.character(..2), timepoint_use = ..3))\n\nBR_ss\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 25 × 14\n      TP    FN    FP    TN detection_limit compound time_window   NAs     N\n   <dbl> <dbl> <int> <int>           <dbl> <chr>    <fct>       <int> <int>\n 1     0     0     6   185             0.5 thc      pre-smoking   758   949\n 2     0     0     6   185             1   thc      pre-smoking   758   949\n 3     0     0     6   185             2   thc      pre-smoking   758   949\n 4     0     0     6   185             5   thc      pre-smoking   758   949\n 5     0     0     6   185            10   thc      pre-smoking   758   949\n 6    24    66     0    30             0.5 thc      91-180 min    829   949\n 7    24    66     0    30             1   thc      91-180 min    829   949\n 8    24    66     0    30             2   thc      91-180 min    829   949\n 9    24    66     0    30             5   thc      91-180 min    829   949\n10    24    66     0    30            10   thc      91-180 min    829   949\n# ℹ 15 more rows\n# ℹ 5 more variables: Sensitivity <dbl>, Specificity <dbl>, PPV <dbl>,\n#   NPV <dbl>, Efficiency <dbl>\n```\n\n\n:::\n:::\n\n:::\n\n## Plot Results\n\n::: panel-tabset\n### Code\n\nNote: requires `library(patchwork)`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_cutoffs <- function(dataset, timepoint_use_variable, tissue, cpd){\n    # control colors and lines used in plots\n    col_val = c(\"#D9D9D9\", \"#BDBDBD\", \"#969696\", \"#636363\", \"#252525\")\n    lines = rep(\"solid\", 5)\n    \n    # prep data\n    df_ss <- dataset |> \n      filter(compound == cpd) |>\n      mutate(time_window = fct_relevel(as.factor(time_window), levels(timepoint_use_variable)),\n             detection_limit = as.factor(detection_limit),\n             Sensitivity =  round(Sensitivity*100, 0),\n             Specificity =  round(Specificity*100, 0))        \n      \n    # plot sensitivity\n    p1 <- df_ss |> \n      ggplot(aes(x = time_window, y = Sensitivity, \n                 color = detection_limit)) + \n      geom_line(linewidth = 1.2, aes(group = detection_limit, \n                                linetype = detection_limit)) + \n      geom_point(show.legend=FALSE) + \n      ylim(0,100) +\n      scale_x_discrete(labels = function(x) str_wrap(x, width = 5)) +\n      scale_linetype_manual(values=lines) +\n      scale_color_manual(values = col_val, name = \"Cutoff \\n (ng/mL)\",\n                        guide = guide_legend(override.aes = list(linetype = c(1),\n                        shape = rep(NA, length(lines))) )) +\n      theme_classic() +\n      theme(plot.title.position = \"plot\",\n            axis.title = element_text(size=14),\n            axis.text = element_text(size=10),\n            legend.position = \"none\", \n            panel.grid = element_blank(),\n            strip.background = element_blank()\n            ) +\n      guides(linetype = \"none\") +\n      labs(x = \"Time Window (min)\", \n           y = \"Sensitivity\", \n           title = paste0(tissue,\": \", toupper(cpd)) )\n  \n  # plot specificity\n  p2 <- df_ss |> \n      ggplot(aes(x = time_window, y = Specificity,\n                 group = detection_limit, \n                 color = detection_limit, \n                 linetype = detection_limit)) + \n      geom_line(linewidth = 1.2) +\n      geom_point() + \n      ylim(0,100) +\n      scale_color_manual(values = col_val) +\n      scale_x_discrete(labels = function(x) str_wrap(x, width = 5)) +\n      scale_linetype_manual(values = lines, \n                            guide = guide_legend(override.aes = list(linetype = \"solid\",\n                                                                     shape = rep(NA, length(lines))) )) +\n      theme_classic() +\n      theme(axis.title = element_text(size=14),\n            axis.text = element_text(size=10),\n            legend.position = c(0.35, 0.25),\n            panel.grid = element_blank(),\n            strip.background = element_blank()) +\n      labs(x = \"Time Window\", \n           y = \"Specificity\",\n           title = \"\" )\n  \n  # combine plots (uses patchwork)\n  p1 + p2\n  \n}\n```\n:::\n\n\n### WB\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_cutoffs(dataset=WB_ss, \n             timepoint_use_variable=WB$timepoint, \n             tissue=\"Blood\", \n             cpd=\"thc\")\n```\n\n::: {.cell-output-display}\n![](06-cs01-eda_files/figure-html/unnamed-chunk-29-1.png){width=2100}\n:::\n:::\n\n\n### OF\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_cutoffs(dataset=OF_ss, \n             timepoint_use_variable=OF$timepoint, \n             tissue=\"Oral Fluid\", \n             cpd=\"thc\")\n```\n\n::: {.cell-output-display}\n![](06-cs01-eda_files/figure-html/unnamed-chunk-30-1.png){width=2100}\n:::\n:::\n\n\n### BR\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_cutoffs(dataset=BR_ss, \n             timepoint_use_variable=BR$timepoint, \n             tissue=\"Breath\", \n             cpd=\"thc\")\n```\n\n::: {.cell-output-display}\n![](06-cs01-eda_files/figure-html/unnamed-chunk-31-1.png){width=2100}\n:::\n:::\n\n\n### Thoughts\n\n- This is only THC\n- For five semi-random cutoffs\n- There are other compounds and other cutoffs to consider\n:::\n\n\n## Possible Extensions\n\nOur current question asks for a *single* compound...and you'll need to decide that.\n\n. . .\n\n...but you could imagine a world where more than one compound or more than one matrix could be measured at the roadside.\n\n. . .\n\nSo:\n\n::: incremental\n-   combination of the oral fluid and blood that would better predict recent use? (For example if an officer stopped a driver and got a high oral fluid, but could not get a blood sample for a couple of hours and got a relatively low result would this predict recent use better than blood (or OF) alone?\n-   Is there a ratio of OF/blood that predicts recent use?\n-   Machine learning model to determine optimal combination of measurements/cutoffs to detect recent use?\n:::\n\n. . .\n\nThings to keep in mind:\n\n-   some matrices are easier to get at the roadside\n-   time from use matters (trying to detect *recent* use)\n-   we may not care equally about sensitivity and specificity\n\n## cs01: what to do now?\n\n1.  Communicate with your group!\n2.  Discuss possible extensions\n3.  Make a plan; figure out who's doing what; set deadlines\n4.  Implement the plan!\n\n## What has to be done:\n\n::: incremental\n-   Question \\| include in Rmd; add extension if applicable\n-   Background \\| summarize and add to what was discussed in classed\n-   Data\n    -   Describe data & variables\n    -   Data wrangling \\| likely copy + paste from notes/lab; add explanation as you go\n-   Analysis\n    -   EDA \\| likely borrowing parts from notes and modifying/adding more in to tell your story; be sure to include interpretations of output & guide the reader\n    -   Drawing conclusions to answer the question\n    -   Extension \\| must be completed\n-   Discussion & Conclusion \\| summarize; discuss limitations\n-   Proofread \\| ensure it makes sense from top to bottom\n-   General Audience communication (submit on Canvas; 1 submission per group)\n:::\n\n::: callout-important\nAvoid the temptation to assign \"Analysis\" to one group member. You'll all likely have to contribute here.\n:::\n\n\n## Collaborating on GitHub\n\n-   Be sure to pull changes every time you sit down to work\n-   Avoid working on the same part of the same file as another teammate OR work in separate files and combine at the end\n-   push your changes once you're ready to add them to the group\n\n\n## Recap {.smaller background-color=\"#92A86A\"}\n\n-   Can you explain/describe the plots generated in the context of these data?\n-   Can you generate EDA plots of your own for these data\n-   Can you understand/work through the more complicated code provided (even if you couldn't have come up with it on your own)\n-   Can you describe sensitivity? Specificity?\n-   Can you explain how TP, TN, FP, and FN were calculated/defined *in this experiment*?\n-   Can you describe the code used to carry out the calculations?\n-   Can you interpret the results from these data?\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}