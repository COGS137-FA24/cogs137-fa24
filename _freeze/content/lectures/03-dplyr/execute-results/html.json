{
  "hash": "a1e9bdea55098976e19ca6a2537154ba",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"03-dplyr\"\nauthor: \"Professor Shannon Ellis\"\ndate: \"2023-10-08\"\n\nformat:\n  html: \n    output-file: 03-dplyr.html\n  revealjs:\n    output-file: 03-dplyr-slides.html\n---\n\n\n# Data Manipulation with `dplyr` {background-color=\"#92A86A\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n:::\n:::\n\n\n## [ad] EDGE\n\nMentorship opportunity for women-identifying students:\n\n![](images/03/edge.png)\n\n## Q&A {.scrollable .smaller}\n\n> Q: what does \\|\\> mean? Do we need to know a lot of how to code those examples from class?\\\n> A: Love that you're noting and questioning these things. We're going to discuss this today! You do not need to know the code examples...yet. We're going to discuss code starting today; this starts with what you'll need to be familiar with.\n\n> Q: How to really extend the case study in our own time, when many information/analysis are already given in the lecture?\\\n> A: We'll discuss this more! But, specifically for this first Case Study. We're asking a very narrow question....but have a lot of variables. Is there some subgroup you could focus on? A different time window? A combination of compounds? Etc.\n\n> Q: How can we do more complex math in R?\\\n> A: Depends on what kind of complex math you're aiming to do - a lot of complex math is built directly into R; other things would require additional packages.\n\n> Q: Where can I find the full study on the data we reviewed in class. Seems like something I'd like to read and perhaps play with the data myself.\\\n> A: We're going to discuss the results today! But, the links are inlcuded in the notes (in what we didn't get to yet.)\n\n> Q: How did the police officers do to detect cognitive impariedness with marijuana consumption?\\\n> A: Not great (not better than flipping a coin). We'll discuss this today!\n\n> Q: Why were the numeric types in the cat lovers data frame labeled as 'dbl' instead of numeric?\\\n> A: There are multiple \"levels\" of object type in R (which I did not make clear in lecture b/c it's not important for this class). Double is a subset of numeric. If you ask for `type()` rather than `class()` you'll see this difference.\n\n> Q: In class, we used \\|\\> as a pipe operator. Is it fine if we use %\\>% instead? Do you have a preference between the two? Thank you!\\\n> A: We'll discuss this today - no preference!\n\n> Q: My github username is pretty weird. How are the professor and TA going to know that it is me if my username does not resemble my actual name?\\\n> A: On your first lab, we ask you to put your name in the author field. We use that to match students to their GH usernames!\n\n## Course Announcements\n\n**Due Dates**:\n\n-   **Lab 01** due Thursday (10/10 11:59 PM; push to GH)\n-   **HW01** now available; due Monday (10/14; 11:59 PM)\n-   Lecture Participation survey \"due\" after class\n\n. . . \n\nNotes:\n-   No Lecture on Thursday this week\n-   Discuss: GH<->RStudio issue (`OpenSSL version mismatch. Built against 30000020, you have 30300020`)\n-   Regular labs resume this week\n-   Mention: waitlist & dropping\n\n## Suggested Reading\n\nR4DS:\n\n-   Chapter 5: [Data Transformation](https://r4ds.hadley.nz/data-transform)\n-   Chapter 16: [Factors](https://r4ds.hadley.nz/factors)\n\n## Agenda\n\n-   `dplyr`\n    -   philosophy\n    -   pipes\n    -   common operations\n-   CS01 Wrangling\n\n## Philosophy\n\n> `dplyr` is a grammar of data manipulation, providing a consistent set of verbs that help you solve the most common data manipulation challenges\n\n::: aside\nSource: [dplyr.tidyverse.org](https://dplyr.tidyverse.org/)\n:::\n\n# Pipes {background-color=\"#92A86A\"}\n\n## The pipe in baseR\n\n<p align=\"center\">\n\n<img src=\"images/03/baseR_hex.jpeg\" width=\"300\" height=\"300\" align=\"center\"/>\n\n</p>\n\n-   `|>` should be read as \"and then\"\n-   for example \"Wake up |> brush teeth\" would be read as \"wake up *and then* brush teeth\"\n\n## Where does the name come from?\n\nThe pipe operator was *first* implemented in the package **magrittr**.\n\n::: columns\n::: {.column width=\"50%\"}\n![](images/03/magritte.jpg)\n:::\n\n::: {.column width=\"50%\"}\n![](images/03/magrittr.jpg)\n:::\n:::\n\nYou will see this frequently in code online. It's equivalent to `|>`.\n\n## Review: How does a pipe work?\n\n-   You can think about the following sequence of actions - find key, unlock car, start car, drive to school, park.\n\n. . .\n\n-   Expressed as a set of nested functions in R pseudocode this would look like:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npark(drive(start_car(find(\"keys\")), to = \"campus\"))\n```\n:::\n\n\n. . .\n\n-   Writing it out using pipes give it a more natural (and easier to read) structure:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfind(\"keys\") |>\n  start_car() |>\n  drive(to = \"campus\") |>\n  park()\n```\n:::\n\n\n. . .\n\n(Reminder to comment on indentation/alignment)\n\n# Data {background-color=\"#92A86A\"}\n\nTo get started with lecture code: `library(tidyverse)`\n\n## Whole Blood (WB) Data from THC Study\n\n\n::: {.cell}\n\n```{.r .cell-code}\nWB <- read_csv(\"https://github.com/ShanEllis/datasets/raw/refs/heads/master/Blood.csv\")\n```\n:::\n\n\n::: callout-important\nWe're using these data to demonstrate the basic principles of `dplyr` and `tidyr` *before* we get to how to specifically clean our CS01 data.\n:::\n\n. . . \n\nRead the data in so you can follow along now!\n\n::: aside\nPut a <font color=\"#32cb31\">green</font> sticky on the front of your computer when you're done. Put a <font color=\"#ff65a3\">pink</font> if you want help/have a question.\n:::\n\n\n## Variables\n\nView the names of variables via:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnames(WB)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"ID\"              \"Treatment\"       \"Group\"           \"FLUID TYPE\"     \n [5] \"Timepoint\"       \"CBN\"             \"CBD\"             \"THC\"            \n [9] \"11-OH-THC\"       \"THC-COOH\"        \"THC-COOH-Gluc\"   \"CBG\"            \n[13] \"THC-V\"           \"time.from.start\"\n```\n\n\n:::\n:::\n\n\n## Viewing your data\n\n-   In the Environment, click on the name of the data frame to view it in the data viewer (or use the `View` function)\n\n-   Use the `glimpse` function to take a peek\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(WB)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 1,525\nColumns: 14\n$ ID              <chr> \"11255\", \"11255\", \"11255\", \"11255\", \"11255\", \"11255\", …\n$ Treatment       <chr> \"5.90%\", \"5.90%\", \"5.90%\", \"5.90%\", \"5.90%\", \"5.90%\", …\n$ Group           <chr> \"Occasional user\", \"Occasional user\", \"Occasional user…\n$ `FLUID TYPE`    <chr> \"WB\", \"WB\", \"WB\", \"WB\", \"WB\", \"WB\", \"WB\", \"WB\", \"WB\", …\n$ Timepoint       <chr> \"T1\", \"T2A\", \"T2B\", \"T3A\", \"T3B\", \"T4A\", \"T4B\", \"T5A\",…\n$ CBN             <dbl> 0.0, 2.8, 0.6, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.6,…\n$ CBD             <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ THC             <dbl> 0.5, 32.4, 5.1, 3.2, 1.8, 1.2, 0.9, 0.8, 0.6, 0.0, 46.…\n$ `11-OH-THC`     <dbl> 0.0, 5.4, 2.4, 1.8, 1.4, 0.0, 0.0, 0.0, 0.0, 0.0, 7.7,…\n$ `THC-COOH`      <dbl> 5.7, 13.5, 11.7, 9.7, 8.7, 6.7, 6.8, 6.8, 6.3, 1.9, 13…\n$ `THC-COOH-Gluc` <dbl> 4.9, 4.4, 6.2, 8.4, 8.9, 8.2, 7.5, 7.1, 6.1, 2.1, 2.7,…\n$ CBG             <dbl> 0.0, 1.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0,…\n$ `THC-V`         <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ time.from.start <dbl> -27, 15, 69, 111, 156, 236, 283, 315, 360, -10, 20, 73…\n```\n\n\n:::\n:::\n\n\n# `dplyr` {background-color=\"#92A86A\"}\n\n## A Grammar of Data Manipulation {.smaller .scrollable}\n\n**dplyr** is based on the concepts of functions as verbs that manipulate data frames.\n\nSingle data frame functions / verbs:\n\n-   `filter`: pick rows matching criteria\n-   `mutate`: add new variables\n-   `select`: pick columns by name\n-   `rename`: rename specific columns\n-   `summarize`: reduce variables to values\n-   `arrange`: reorder rows\n-   `distinct`: filter for unique rows\n-   `pull`: grab a column as a vector\n-   `sample_n` / `sample_frac`: randomly sample rows\n-   `slice`: pick rows using index(es)\n-   ... (many more)\n\n## **`dplyr`** rules for functions\n\n1.  First argument is *always* a data frame\n\n2.  Subsequent arguments say what to do with that data frame\n\n3.  Always return a data frame\n\n4.  Do not modify in place\n\n5.  Performance via lazy evaluation\n\n## Filter rows with `filter`\n\n-   Select a subset of rows in a data frame.\n-   Easily filter for many conditions at once.\n\n## `filter` (single condition)\n\nfor only measurements from Occasional users\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nWB |>\n  filter(Group == \"Occasional user\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 750 × 14\n   ID    Treatment Group    `FLUID TYPE` Timepoint   CBN   CBD   THC `11-OH-THC`\n   <chr> <chr>     <chr>    <chr>        <chr>     <dbl> <dbl> <dbl>       <dbl>\n 1 11255 5.90%     Occasio… WB           T1          0       0   0.5         0  \n 2 11255 5.90%     Occasio… WB           T2A         2.8     0  32.4         5.4\n 3 11255 5.90%     Occasio… WB           T2B         0.6     0   5.1         2.4\n 4 11255 5.90%     Occasio… WB           T3A         0       0   3.2         1.8\n 5 11255 5.90%     Occasio… WB           T3B         0       0   1.8         1.4\n 6 11255 5.90%     Occasio… WB           T4A         0       0   1.2         0  \n 7 11255 5.90%     Occasio… WB           T4B         0       0   0.9         0  \n 8 11255 5.90%     Occasio… WB           T5A         0       0   0.8         0  \n 9 11255 5.90%     Occasio… WB           T5B         0       0   0.6         0  \n10 T0316 13.40%    Occasio… WB           T1          0       0   0           0  \n# ℹ 740 more rows\n# ℹ 5 more variables: `THC-COOH` <dbl>, `THC-COOH-Gluc` <dbl>, CBG <dbl>,\n#   `THC-V` <dbl>, time.from.start <dbl>\n```\n\n\n:::\n:::\n\n\n## `filter` (mutiple conditions)\n\nfor only measurements from Occasional users where THC \\> 100\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nWB |>\n  filter(Group == \"Occasional user\", THC > 100)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 14\n  ID    Treatment Group     `FLUID TYPE` Timepoint   CBN   CBD   THC `11-OH-THC`\n  <chr> <chr>     <chr>     <chr>        <chr>     <dbl> <dbl> <dbl>       <dbl>\n1 11467 5.90%     Occasion… WB           T2A        14.5     0  156.        15.5\n2 28344 5.90%     Occasion… WB           T2A        11       0  126.        12.2\n# ℹ 5 more variables: `THC-COOH` <dbl>, `THC-COOH-Gluc` <dbl>, CBG <dbl>,\n#   `THC-V` <dbl>, time.from.start <dbl>\n```\n\n\n:::\n:::\n\n\n## or `select` a range of variables\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nWB |>\n  select(ID:`FLUID TYPE`)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,525 × 4\n   ID    Treatment Group           `FLUID TYPE`\n   <chr> <chr>     <chr>           <chr>       \n 1 11255 5.90%     Occasional user WB          \n 2 11255 5.90%     Occasional user WB          \n 3 11255 5.90%     Occasional user WB          \n 4 11255 5.90%     Occasional user WB          \n 5 11255 5.90%     Occasional user WB          \n 6 11255 5.90%     Occasional user WB          \n 7 11255 5.90%     Occasional user WB          \n 8 11255 5.90%     Occasional user WB          \n 9 11255 5.90%     Occasional user WB          \n10 T0686 5.90%     Frequent user   WB          \n# ℹ 1,515 more rows\n```\n\n\n:::\n:::\n\n\n-   `ID:FLUID TYPE`: take all columns from `ID` through `FLUID TYPE`\n-   `FLUID TYPE` has backticks due to space in column name\n\n## `select` to keep range + others\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nWB |>\n  select(ID:`FLUID TYPE`, THC, time.from.start)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,525 × 6\n   ID    Treatment Group           `FLUID TYPE`   THC time.from.start\n   <chr> <chr>     <chr>           <chr>        <dbl>           <dbl>\n 1 11255 5.90%     Occasional user WB             0.5             -27\n 2 11255 5.90%     Occasional user WB            32.4              15\n 3 11255 5.90%     Occasional user WB             5.1              69\n 4 11255 5.90%     Occasional user WB             3.2             111\n 5 11255 5.90%     Occasional user WB             1.8             156\n 6 11255 5.90%     Occasional user WB             1.2             236\n 7 11255 5.90%     Occasional user WB             0.9             283\n 8 11255 5.90%     Occasional user WB             0.8             315\n 9 11255 5.90%     Occasional user WB             0.6             360\n10 T0686 5.90%     Frequent user   WB             0               -10\n# ℹ 1,515 more rows\n```\n\n\n:::\n:::\n\n\n## or `select` to exclude variables\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nWB |>\n  select(-Timepoint)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,525 × 13\n   ID    Treatment Group   `FLUID TYPE`   CBN   CBD   THC `11-OH-THC` `THC-COOH`\n   <chr> <chr>     <chr>   <chr>        <dbl> <dbl> <dbl>       <dbl>      <dbl>\n 1 11255 5.90%     Occasi… WB             0       0   0.5         0          5.7\n 2 11255 5.90%     Occasi… WB             2.8     0  32.4         5.4       13.5\n 3 11255 5.90%     Occasi… WB             0.6     0   5.1         2.4       11.7\n 4 11255 5.90%     Occasi… WB             0       0   3.2         1.8        9.7\n 5 11255 5.90%     Occasi… WB             0       0   1.8         1.4        8.7\n 6 11255 5.90%     Occasi… WB             0       0   1.2         0          6.7\n 7 11255 5.90%     Occasi… WB             0       0   0.9         0          6.8\n 8 11255 5.90%     Occasi… WB             0       0   0.8         0          6.8\n 9 11255 5.90%     Occasi… WB             0       0   0.6         0          6.3\n10 T0686 5.90%     Freque… WB             0       0   0           0          1.9\n# ℹ 1,515 more rows\n# ℹ 4 more variables: `THC-COOH-Gluc` <dbl>, CBG <dbl>, `THC-V` <dbl>,\n#   time.from.start <dbl>\n```\n\n\n:::\n:::\n\n\n## `select` can rename columns\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nWB |>\n  select(ID:`FLUID TYPE`, THC, start_time = time.from.start)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,525 × 6\n   ID    Treatment Group           `FLUID TYPE`   THC start_time\n   <chr> <chr>     <chr>           <chr>        <dbl>      <dbl>\n 1 11255 5.90%     Occasional user WB             0.5        -27\n 2 11255 5.90%     Occasional user WB            32.4         15\n 3 11255 5.90%     Occasional user WB             5.1         69\n 4 11255 5.90%     Occasional user WB             3.2        111\n 5 11255 5.90%     Occasional user WB             1.8        156\n 6 11255 5.90%     Occasional user WB             1.2        236\n 7 11255 5.90%     Occasional user WB             0.9        283\n 8 11255 5.90%     Occasional user WB             0.8        315\n 9 11255 5.90%     Occasional user WB             0.6        360\n10 T0686 5.90%     Frequent user   WB             0          -10\n# ℹ 1,515 more rows\n```\n\n\n:::\n:::\n\n\n## \"Save\" when you make dataset changes\n\n-   decide if you want to overwrite original or create new\n\n\n::: {.cell}\n\n```{.r .cell-code}\nWB_sub <- WB |>\n  select(ID:`FLUID TYPE`, THC, start_time = time.from.start)\n```\n:::\n\n\n## Check before you move on\n\nAlways check your changes and confirm code did what you wanted it to do\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnames(WB_sub)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"ID\"         \"Treatment\"  \"Group\"      \"FLUID TYPE\" \"THC\"       \n[6] \"start_time\"\n```\n\n\n:::\n:::\n\n\n## `rename` specific columns\n\nUseful for correcting typos, and renaming to make variable names shorter and/or more informative\n\n-   Original names:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnames(WB_sub)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"ID\"         \"Treatment\"  \"Group\"      \"FLUID TYPE\" \"THC\"       \n[6] \"start_time\"\n```\n\n\n:::\n:::\n\n\n. . .\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nWB_sub <- WB_sub |>\n  rename(fluid_type = `FLUID TYPE`)\n```\n:::\n\n\n## `mutate` to add new variables\n\n-   Note assigning back out to itself with new column\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\n(WB_sub <- WB_sub |> \n  mutate(baseline = start_time < 0))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,525 × 7\n   ID    Treatment Group           fluid_type   THC start_time baseline\n   <chr> <chr>     <chr>           <chr>      <dbl>      <dbl> <lgl>   \n 1 11255 5.90%     Occasional user WB           0.5        -27 TRUE    \n 2 11255 5.90%     Occasional user WB          32.4         15 FALSE   \n 3 11255 5.90%     Occasional user WB           5.1         69 FALSE   \n 4 11255 5.90%     Occasional user WB           3.2        111 FALSE   \n 5 11255 5.90%     Occasional user WB           1.8        156 FALSE   \n 6 11255 5.90%     Occasional user WB           1.2        236 FALSE   \n 7 11255 5.90%     Occasional user WB           0.9        283 FALSE   \n 8 11255 5.90%     Occasional user WB           0.8        315 FALSE   \n 9 11255 5.90%     Occasional user WB           0.6        360 FALSE   \n10 T0686 5.90%     Frequent user   WB           0          -10 TRUE    \n# ℹ 1,515 more rows\n```\n\n\n:::\n:::\n\n\n## Your Turn\n\nHow many baseline measurements had a THC value greater than zero?\n\n::: aside\nPut a <font color=\"#32cb31\">green</font> sticky on the front of your computer when you're done. Put a <font color=\"#ff65a3\">pink</font> if you want help/have a question.\n:::\n\n## `group_by` + `summarize` to reduce variables to values\n\nThe values are summarized in a data frame:\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2-3\"}\nWB_sub |>\n  group_by(Treatment, Group) |>\n  summarize(count = n())\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'Treatment'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n# Groups:   Treatment [3]\n  Treatment Group           count\n  <chr>     <chr>           <int>\n1 13.40%    Frequent user     258\n2 13.40%    Occasional user   243\n3 5.90%     Frequent user     266\n4 5.90%     Occasional user   247\n5 Placebo   Frequent user     251\n6 Placebo   Occasional user   260\n```\n\n\n:::\n:::\n\n\n## `count` to group by then count\n\nSame as last example, but summarize, not limited to counting\n\n\n::: {.cell}\n\n```{.r .cell-code}\nWB_sub |>\n  count(Treatment, Group)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n  Treatment Group               n\n  <chr>     <chr>           <int>\n1 13.40%    Frequent user     258\n2 13.40%    Occasional user   243\n3 5.90%     Frequent user     266\n4 5.90%     Occasional user   247\n5 Placebo   Frequent user     251\n6 Placebo   Occasional user   260\n```\n\n\n:::\n:::\n\n\n## Your Turn\n\nYou're starting to work on the case study and you get curious. How many non-baseline observations have a THC \\> 50. Does this number differ by treatment or group?\n\n::: aside\nPut a <font color=\"#32cb31\">green</font> sticky on the front of your computer when you're done. Put a <font color=\"#ff65a3\">pink</font> if you want help/have a question.\n:::\n\n## and `arrange` to order rows\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nWB_sub |>\n  arrange(THC)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,525 × 7\n   ID    Treatment Group           fluid_type   THC start_time baseline\n   <chr> <chr>     <chr>           <chr>      <dbl>      <dbl> <lgl>   \n 1 T0686 5.90%     Frequent user   WB             0        -10 TRUE    \n 2 11258 13.40%    Frequent user   WB             0        -25 TRUE    \n 3 11258 13.40%    Frequent user   WB             0        375 FALSE   \n 4 T0316 13.40%    Occasional user WB             0        -78 TRUE    \n 5 11234 Placebo   Frequent user   WB             0        -64 TRUE    \n 6 11234 Placebo   Frequent user   WB             0         12 FALSE   \n 7 11234 Placebo   Frequent user   WB             0         85 FALSE   \n 8 11234 Placebo   Frequent user   WB             0        126 FALSE   \n 9 11234 Placebo   Frequent user   WB             0        210 FALSE   \n10 11234 Placebo   Frequent user   WB             0        249 FALSE   \n# ℹ 1,515 more rows\n```\n\n\n:::\n:::\n\n\n. . .\n\n[<i class=\"fa fa-user\" aria-hidden=\"true\"></i>   If you wanted to arrange these in descending order what would you add to the code?]{style=\"background-color: #ADD8E6\"}\n\n## `distinct` to filter for unique rows\n\nHow many unique participants?\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nWB_sub |> \n  distinct(ID) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 190 × 1\n   ID   \n   <chr>\n 1 11255\n 2 T0686\n 3 11258\n 4 11264\n 5 11263\n 6 T0316\n 7 11270\n 8 11234\n 9 11323\n10 10972\n# ℹ 180 more rows\n```\n\n\n:::\n:::\n\n\n## `distinct` has a `.keep_all` parameter\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nWB_sub |> \n  distinct(ID, .keep_all=TRUE) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 190 × 7\n   ID    Treatment Group           fluid_type   THC start_time baseline\n   <chr> <chr>     <chr>           <chr>      <dbl>      <dbl> <lgl>   \n 1 11255 5.90%     Occasional user WB           0.5        -27 TRUE    \n 2 T0686 5.90%     Frequent user   WB           0          -10 TRUE    \n 3 11258 13.40%    Frequent user   WB           0          -25 TRUE    \n 4 11264 13.40%    Frequent user   WB           2.4        -30 TRUE    \n 5 11263 5.90%     Frequent user   WB           3.2        -26 TRUE    \n 6 T0316 13.40%    Occasional user WB           0          -78 TRUE    \n 7 11270 Placebo   Frequent user   WB           4.6        -70 TRUE    \n 8 11234 Placebo   Frequent user   WB           0          -64 TRUE    \n 9 11323 Placebo   Occasional user WB           0.8        -71 TRUE    \n10 10972 13.40%    Frequent user   WB           3.9        -72 TRUE    \n# ℹ 180 more rows\n```\n\n\n:::\n:::\n\n\n. . .\n\n[<i class=\"fa fa-user\" aria-hidden=\"true\"></i>   Which observation did `dplyr` decide to keep?]{style=\"background-color: #ADD8E6\"}\n\n# Factors {background-color=\"#92A86A\"}\n\n## Factors\n\nFactor objects are how R stores data for categorical variables (fixed numbers of discrete values).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(x = factor(c(\"BS\", \"MS\", \"PhD\", \"MS\")))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] BS  MS  PhD MS \nLevels: BS MS PhD\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n Factor w/ 3 levels \"BS\",\"MS\",\"PhD\": 1 2 3 2\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntypeof(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"integer\"\n```\n\n\n:::\n:::\n\n\n. . .\n\n[<i class=\"fa fa-user\" aria-hidden=\"true\"></i>   In our data, which variables should be treated as factors?]{style=\"background-color: #ADD8E6\"}\n\n## Why does it matter?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nWB_sub |> \n  filter(start_time > 0, start_time < 60) |> \n  ggplot(mapping = aes(x = Treatment, y=THC)) +\n    geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](03-dplyr_files/figure-html/unnamed-chunk-25-1.png){width=2100}\n:::\n:::\n\n\nNote: we'll discuss this specific code soon.\n\n## Use `forcats` to manipulate factors\n\n-   `fct_recode` - treat as factor; give new labels\n-   `fct_relevel` - change order of levels\n\n\n::: {.cell}\n\n```{.r .cell-code}\nWB_sub <- WB_sub |>\n  mutate(Treatment = fct_recode(Treatment, \n         \"5.9% THC (low dose)\" = \"5.90%\",\n         \"13.4% THC (high dose)\" = \"13.40%\"),\n         Treatment = fct_relevel(Treatment, \"Placebo\", \"5.9% THC (low dose)\"))\n```\n:::\n\n\n. . .\n\n(same plotting code as earlier)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nWB_sub |> \n  filter(start_time > 0, start_time < 60) |> \n  ggplot(mapping = aes(x = Treatment, y=THC)) +\n    geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](03-dplyr_files/figure-html/unnamed-chunk-27-1.png){width=2100}\n:::\n:::\n\n\n## `forcats` functionality <img src=\"images/01/hex-forcats.png\" width=\"10%\" align=\"left\"/>\n\n-   R uses factors to handle categorical variables, variables that have a fixed and known set of possible values. Historically, factors were much easier to work with than character vectors, so many base R functions automatically convert character vectors to factors.\n\n-   factors are still useful when you have true categorical data, and when you want to override the ordering of character vectors to improve display. The goal of the `forcats` package is to provide a suite of useful tools that solve common problems with factors.\n\n::: aside\nSource: [forcats.tidyverse.org](http://forcats.tidyverse.org/)\n:::\n\n# CS01: Wrangling {background-color=\"#92A86A\"}\n\n## Data Cleaning\n\n\n::: {.cell}\n\n```{.r .cell-code}\nWB <- WB |> \n  mutate(Treatment = fct_recode(Treatment, \n                                \"5.9% THC (low dose)\" = \"5.90%\",\n                                \"13.4% THC (high dose)\" = \"13.40%\"),\n         Treatment = fct_relevel(Treatment, \"Placebo\", \"5.9% THC (low dose)\")) |> \n  janitor::clean_names() |>\n  rename(thcoh = x11_oh_thc,\n         thccooh = thc_cooh,\n         thccooh_gluc = thc_cooh_gluc,\n         thcv = thc_v)\n```\n:::\n\n\n[<i class=\"fa fa-user\" aria-hidden=\"true\"></i>   What is this code accomplishing?]{style=\"background-color: #ADD8E6\"}\n\n## Data Cleaning\n\n\n::: {.cell}\n\n```{.r .cell-code}\nWB |> \n  mutate(timepoint = case_when(time_from_start < 0 ~ \"pre-smoking\",\n                               time_from_start > 0 & time_from_start <= 30 ~ \"0-30 min\",\n                               time_from_start > 30 & time_from_start <= 70 ~ \"31-70 min\",\n                               time_from_start > 70 & time_from_start <= 100 ~ \"71-100 min\",\n                               time_from_start > 100 & time_from_start <= 180 ~ \"101-180 min\",\n                               time_from_start > 180 & time_from_start <= 210 ~ \"181-210 min\",\n                               time_from_start > 210 & time_from_start <= 240 ~ \"211-240 min\",\n                               time_from_start > 240 & time_from_start <= 270 ~ \"241-270 min\",\n                               time_from_start > 270 & time_from_start <= 300 ~ \"271-300 min\",\n                               time_from_start > 300 ~ \"301+ min\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,525 × 14\n   id    treatment    group fluid_type timepoint   cbn   cbd   thc thcoh thccooh\n   <chr> <fct>        <chr> <chr>      <chr>     <dbl> <dbl> <dbl> <dbl>   <dbl>\n 1 11255 5.9% THC (l… Occa… WB         pre-smok…   0       0   0.5   0       5.7\n 2 11255 5.9% THC (l… Occa… WB         0-30 min    2.8     0  32.4   5.4    13.5\n 3 11255 5.9% THC (l… Occa… WB         31-70 min   0.6     0   5.1   2.4    11.7\n 4 11255 5.9% THC (l… Occa… WB         101-180 …   0       0   3.2   1.8     9.7\n 5 11255 5.9% THC (l… Occa… WB         101-180 …   0       0   1.8   1.4     8.7\n 6 11255 5.9% THC (l… Occa… WB         211-240 …   0       0   1.2   0       6.7\n 7 11255 5.9% THC (l… Occa… WB         271-300 …   0       0   0.9   0       6.8\n 8 11255 5.9% THC (l… Occa… WB         301+ min    0       0   0.8   0       6.8\n 9 11255 5.9% THC (l… Occa… WB         301+ min    0       0   0.6   0       6.3\n10 T0686 5.9% THC (l… Freq… WB         pre-smok…   0       0   0     0       1.9\n# ℹ 1,515 more rows\n# ℹ 4 more variables: thccooh_gluc <dbl>, cbg <dbl>, thcv <dbl>,\n#   time_from_start <dbl>\n```\n\n\n:::\n:::\n\n\n[<i class=\"fa fa-user\" aria-hidden=\"true\"></i>   What is this code accomplishing?]{style=\"background-color: #ADD8E6\"}\n\n. . .\n\nNote: This code could have been combined with the above...I just wanted to discuss it for simplicity in lecture separately.\n\n## CS01 Data Cleaning\n\nWe've cleaned up the whole blood data. Your lab will guide you to clean up the oral fluid and breath data. (It will be similar, but not the same as this.)\n\n# Recap {background-color=\"#92A86A\"}\n\n-   Understand the basic tenants of `dplyr`\n-   Describe and utilize the pipe in workflows\n-   Describe and use common `verbs` (functions)\n-   Understand the documentation for `dplyr` functions\n-   Understand what factors are an that `forcats` is a package with functionality for working with them\n-   Describe the wrangling carried out on the CS01 WB dataset\n",
    "supporting": [
      "03-dplyr_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/font-awesome-6.4.2/css/all.min.css\" rel=\"stylesheet\" />\n<link href=\"../../site_libs/font-awesome-6.4.2/css/v4-shims.min.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}