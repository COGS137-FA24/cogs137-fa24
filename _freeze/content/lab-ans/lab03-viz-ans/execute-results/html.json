{
  "hash": "da2fcd7455a4000915d5c847d3f9909c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Lab 03 - Data Visualization (Ans)\"\nauthor: \"Sean Trott and Jiawei Lyu\"\noutput: \n  html: \n    highlight: pygments\n    css: lab.css\n    preview-links: auto\n---\n\n\n### Load packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse) \n```\n:::\n\n\n### Load data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncollege_recent_grads <- read_csv(\"data/recent-grads.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 173 Columns: 21\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): major, major_category\ndbl (19): rank, major_code, total, sample_size, men, women, sharewomen, empl...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nglimpse(college_recent_grads)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 173\nColumns: 21\n$ rank                        <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,…\n$ major_code                  <dbl> 2419, 2416, 2415, 2417, 2405, 2418, 6202, …\n$ major                       <chr> \"Petroleum Engineering\", \"Mining And Miner…\n$ major_category              <chr> \"Engineering\", \"Engineering\", \"Engineering…\n$ total                       <dbl> 2339, 756, 856, 1258, 32260, 2573, 3777, 1…\n$ sample_size                 <dbl> 36, 7, 3, 16, 289, 17, 51, 10, 1029, 631, …\n$ men                         <dbl> 2057, 679, 725, 1123, 21239, 2200, 2110, 8…\n$ women                       <dbl> 282, 77, 131, 135, 11021, 373, 1667, 960, …\n$ sharewomen                  <dbl> 0.1205643, 0.1018519, 0.1530374, 0.1073132…\n$ employed                    <dbl> 1976, 640, 648, 758, 25694, 1857, 2912, 15…\n$ employed_fulltime           <dbl> 1849, 556, 558, 1069, 23170, 2038, 2924, 1…\n$ employed_parttime           <dbl> 270, 170, 133, 150, 5180, 264, 296, 553, 1…\n$ employed_fulltime_yearround <dbl> 1207, 388, 340, 692, 16697, 1449, 2482, 82…\n$ unemployed                  <dbl> 37, 85, 16, 40, 1672, 400, 308, 33, 4650, …\n$ unemployment_rate           <dbl> 0.018380527, 0.117241379, 0.024096386, 0.0…\n$ p25th                       <dbl> 95000, 55000, 50000, 43000, 50000, 50000, …\n$ median                      <dbl> 110000, 75000, 73000, 70000, 65000, 65000,…\n$ p75th                       <dbl> 125000, 90000, 105000, 80000, 75000, 10200…\n$ college_jobs                <dbl> 1534, 350, 456, 529, 18314, 1142, 1768, 97…\n$ non_college_jobs            <dbl> 364, 257, 176, 102, 4440, 657, 314, 500, 1…\n$ low_wage_jobs               <dbl> 193, 50, 0, 0, 972, 244, 259, 220, 3253, 3…\n```\n\n\n:::\n:::\n\n\n# Data wrangling and visualization\n\n## Which major has the lowest unemployment rate?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncollege_recent_grads |>\n  arrange(unemployment_rate) |>\n  select(rank, major, unemployment_rate)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 173 × 3\n    rank major                                      unemployment_rate\n   <dbl> <chr>                                                  <dbl>\n 1    53 Mathematics And Computer Science                     0      \n 2    74 Military Technologies                                0      \n 3    84 Botany                                               0      \n 4   113 Soil Science                                         0      \n 5   121 Educational Administration And Supervision           0      \n 6    15 Engineering Mechanics Physics And Science            0.00633\n 7    20 Court Reporting                                      0.0117 \n 8   120 Mathematics Teacher Education                        0.0162 \n 9     1 Petroleum Engineering                                0.0184 \n10    65 General Agriculture                                  0.0196 \n# ℹ 163 more rows\n```\n\n\n:::\n:::\n\n\nDisplay only 4 decimal places using `mutate` and `round`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncollege_recent_grads |>\n  arrange(unemployment_rate) |>\n  select(rank, major, unemployment_rate) |>\n  mutate(unemployment_rate = round(unemployment_rate, digits = 4))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 173 × 3\n    rank major                                      unemployment_rate\n   <dbl> <chr>                                                  <dbl>\n 1    53 Mathematics And Computer Science                      0     \n 2    74 Military Technologies                                 0     \n 3    84 Botany                                                0     \n 4   113 Soil Science                                          0     \n 5   121 Educational Administration And Supervision            0     \n 6    15 Engineering Mechanics Physics And Science             0.0063\n 7    20 Court Reporting                                       0.0117\n 8   120 Mathematics Teacher Education                         0.0162\n 9     1 Petroleum Engineering                                 0.0184\n10    65 General Agriculture                                   0.0196\n# ℹ 163 more rows\n```\n\n\n:::\n:::\n\n\nDisplay 2 scientific digits using `options`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\noptions(digits = 2)\n```\n:::\n\n\n### Exercise 1\n\nWhich of these options, changing the input data or altering the number of digits displayed without touching the input data, is the better option? Explain your reasoning. Then, implement the option you chose.\n\nI prefer the `options` approach because it will enforce consistency each time we display variables, without having to make the call to `round` each time (without changing the underlying data).\n\n## Which major has the highest percentage of women?\n\n### Exercise 2\n\nUsing what you've learned so far, arrange the data in descending order with respect to proportion of women in a major, and display only the major, the total number of people with major, and proportion of women. Show only the top 3 majors by adding `head(3)` at the end of the pipeline.\n\nThe `sharewomen` column lists the proportion of women in each major. So we can `arrange` our data in descending order using `desc(sharewomen)`, then `select` the columns we want: `major`, `total`, and `sharewomen`. We then just display the top 3 majors using `head(3)`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncollege_recent_grads |>\n  arrange(desc(sharewomen)) |>\n  select(major, total, sharewomen) |>\n  head(3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 3\n  major                                         total sharewomen\n  <chr>                                         <dbl>      <dbl>\n1 Early Childhood Education                     37589      0.969\n2 Communication Disorders Sciences And Services 38279      0.968\n3 Medical Assisting Services                    11123      0.928\n```\n\n\n:::\n:::\n\n\n## How do the distributions of median income compare across major categories?\n\n### Exercise 3\n\nWhy do we often choose the median, rather than the mean, to describe the typical income of a group of people?\n\nThe mean is more affected by the presence of outliers and by the skew of the distribution. Thus, the presence of a single person with very high income can increase the mean substantively, such that it's no longer a good impression of the overall distribution. In contrast, the median (or the \"middle number\") tells us the income exactly in the middle of the distribution.\n\n### Exercise 4\n\nTry binwidths of \\$1000 and \\$5000 and choose one. Explain your reasoning for your choice. Note that the binwidth is an argument for the `geom_histogram` function. So to specify a binwidth of \\$1000, you would use `geom_histogram(binwidth = 1000)`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = college_recent_grads, mapping = aes(x = median)) +\n  geom_histogram(binwidth=5000)\n```\n\n::: {.cell-output-display}\n![](lab03-viz-ans_files/figure-html/binwidths-1.png){width=672}\n:::\n:::\n\n\nI ended up choosing `binwidth=5000`. When `binwidth=1000`, there were too many small differences in income that were thus not grouped together, and it was harder to see the overall shape of the distribution.\n\nWe can also calculate summary statistics for this distribution using the `summarise` function:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncollege_recent_grads |>\n  summarise(min = min(median), max = max(median),\n            mean = mean(median), med = median(median),\n            sd = sd(median), \n            q1 = quantile(median, probs = 0.25),\n            q3 = quantile(median, probs = 0.75))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 7\n    min    max   mean   med     sd    q1    q3\n  <dbl>  <dbl>  <dbl> <dbl>  <dbl> <dbl> <dbl>\n1 22000 110000 40151. 36000 11470. 33000 45000\n```\n\n\n:::\n:::\n\n\n### Exercise 5\n\nBased on the shape of the histogram you created in the previous exercise, determine which of these summary statistics is useful for describing the distribution. Write up your description (remember shape, center, spread, any unusual observations) and include the summary statistic output as well.\n\nThe underlying distribution of `median` incomes is somewhat right-skewed, with at least 1-2 majors making a lot of money. Because of this, I'm going to use the `median` median income.\n\nIt would be probably be fine to use the `mean` median income as well---judging by the distribution of `median` incomes in each `major_category`, which are relatively normal-ish.\n\n### Exercise 6\n\nPlot the distribution of `median` income using a histogram, faceted by `major_category`. Use the `binwidth` you chose in the earlier exercise.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = college_recent_grads, mapping = aes(x = median)) +\n  geom_histogram(binwidth = 5000) +\n  facet_wrap( ~ major_category, ncol = 4)\n```\n\n::: {.cell-output-display}\n![](lab03-viz-ans_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n### Exercise 7\n\nWhich major category has the highest typical (you'll need to decide what this means) median income? Use the partial code below, filling it in with the appropriate statistic and function. Also note that we are looking for the highest statistic, so make sure to arrange in the correct direction.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncollege_recent_grads |>\n  group_by(major_category) |>\n  summarise(median = median(median)) |>\n  arrange(desc(median))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 16 × 2\n   major_category                      median\n   <chr>                                <dbl>\n 1 Engineering                          57000\n 2 Computers & Mathematics              45000\n 3 Business                             40000\n 4 Physical Sciences                    39500\n 5 Social Science                       38000\n 6 Biology & Life Science               36300\n 7 Law & Public Policy                  36000\n 8 Agriculture & Natural Resources      35000\n 9 Communications & Journalism          35000\n10 Health                               35000\n11 Industrial Arts & Consumer Services  35000\n12 Interdisciplinary                    35000\n13 Education                            32750\n14 Humanities & Liberal Arts            32000\n15 Arts                                 30750\n16 Psychology & Social Work             30000\n```\n\n\n:::\n:::\n\n\nEngineering.\n\n### Exercise 8\n\nWhich major category is the least popular in this sample? To answer this question we can take advantage of the `total` column:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncollege_recent_grads |>\n  filter(is.na(total) == FALSE) |>\n  group_by(major_category) |>\n  summarise(popularity = sum(total)) |>\n  arrange(popularity)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 16 × 2\n   major_category                      popularity\n   <chr>                                    <dbl>\n 1 Interdisciplinary                        12296\n 2 Agriculture & Natural Resources          75620\n 3 Law & Public Policy                     179107\n 4 Physical Sciences                       185479\n 5 Industrial Arts & Consumer Services     229792\n 6 Computers & Mathematics                 299008\n 7 Arts                                    357130\n 8 Communications & Journalism             392601\n 9 Biology & Life Science                  453862\n10 Health                                  463230\n11 Psychology & Social Work                481007\n12 Social Science                          529966\n13 Engineering                             537583\n14 Education                               559129\n15 Humanities & Liberal Arts               713468\n16 Business                               1302376\n```\n\n\n:::\n:::\n\n\n\n## All STEM fields aren't the same\n\nFirst, let's create a new vector called `stem_categories` that lists the major categories that are considered STEM fields.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstem_categories <- c(\"Biology & Life Science\",\n                     \"Computers & Mathematics\",\n                     \"Engineering\",\n                     \"Physical Sciences\")\n```\n:::\n\n\nThen, we can use this to create a new variable in our data frame indicating whether a major is STEM or not.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncollege_recent_grads <- college_recent_grads |>\n  mutate(major_type = case_when(\n    major_category %in% stem_categories ~ \"stem\",\n    TRUE ~ \"not stem\"\n  ))\n```\n:::\n\n\nWe can use the logical operators to also `filter` our data for STEM majors whose median earnings is less than median for all majors's median earnings, which we found to be \\$36,000 earlier.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncollege_recent_grads |>\n  filter(\n    major_type == \"stem\",\n    median < median(college_recent_grads$median)\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 22\n    rank major_code major        major_category  total sample_size    men  women\n   <dbl>      <dbl> <chr>        <chr>           <dbl>       <dbl>  <dbl>  <dbl>\n 1    93       1301 Environment… Biology & Lif…  25965         225  10787  15178\n 2    98       5098 Multi-Disci… Physical Scie…  62052         427  27015  35037\n 3   102       3608 Physiology   Biology & Lif…  22060          99   8422  13638\n 4   106       2001 Communicati… Computers & M…  18035         208  11431   6604\n 5   109       3611 Neuroscience Biology & Lif…  13663          53   4944   8719\n 6   111       5002 Atmospheric… Physical Scie…   4043          32   2744   1299\n 7   123       3699 Miscellaneo… Biology & Lif…  10706          63   4747   5959\n 8   124       3600 Biology      Biology & Lif… 280709        1370 111762 168947\n 9   133       3604 Ecology      Biology & Lif…   9154          86   3878   5276\n10   169       3609 Zoology      Biology & Lif…   8409          47   3050   5359\n# ℹ 14 more variables: sharewomen <dbl>, employed <dbl>,\n#   employed_fulltime <dbl>, employed_parttime <dbl>,\n#   employed_fulltime_yearround <dbl>, unemployed <dbl>,\n#   unemployment_rate <dbl>, p25th <dbl>, median <dbl>, p75th <dbl>,\n#   college_jobs <dbl>, non_college_jobs <dbl>, low_wage_jobs <dbl>,\n#   major_type <chr>\n```\n\n\n:::\n:::\n\n\n### Exercise 9\n\nWhich STEM majors have median salaries equal to or less than the median for all majors's median earnings? Your output should only show the major name and median, 25th percentile, and 75th percentile earning for that major as and should be sorted such that the major with the highest median earning is on top.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncollege_recent_grads |>\n  filter(\n    major_type == \"stem\",\n    median < median(college_recent_grads$median)\n  ) |>\n  select(major, median, p25th, p75th) |>\n  arrange(desc(median))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 4\n   major                                 median p25th p75th\n   <chr>                                  <dbl> <dbl> <dbl>\n 1 Environmental Science                  35600 25000 40200\n 2 Multi-Disciplinary Or General Science  35000 24000 50000\n 3 Physiology                             35000 20000 50000\n 4 Communication Technologies             35000 25000 45000\n 5 Neuroscience                           35000 30000 44000\n 6 Atmospheric Sciences And Meteorology   35000 28000 50000\n 7 Miscellaneous Biology                  33500 23000 48000\n 8 Biology                                33400 24000 45000\n 9 Ecology                                33000 23000 42000\n10 Zoology                                26000 20000 39000\n```\n\n\n:::\n:::\n\n\n## What types of majors do women tend to major in?\n\n### Exercise 10\n\nCreate a scatterplot of median income vs. proportion of women in that major, colored by whether the major is in a STEM field or not. Describe the association between these three variables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncollege_recent_grads |>\n  drop_na(sharewomen) |> ## This will drop rows for which sharewomen has NA value\n  ggplot(aes(x = median,\n             y = sharewomen,\n             color = major_type)) +\n  geom_point(alpha = .6) +\n  labs(x = \"Median income for major\",\n       y = \"Share of women in major\",\n       color = \"STEM major?\")\n```\n\n::: {.cell-output-display}\n![](lab03-viz-ans_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\nIn general, there appears to be a negative relationship between `median` income and the proportion of women (`sharewomen`) in a major. Both variables are also correlated with `major_type`: `stem` majors tend to have a lower proportion of women (and lower `median` income), while `not stem` majors have a higher proportion (and higher `median` income).\n\n(Note that the negative relationship with `median` income is somewhat clearer if `log(median`) is used instead.)\n",
    "supporting": [
      "lab03-viz-ans_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}