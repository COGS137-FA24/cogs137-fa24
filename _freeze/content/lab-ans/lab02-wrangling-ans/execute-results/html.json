{
  "hash": "c2fbef89c3eedd63f78f3bd4d6453b9d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Lab 02 - Wrangling (Ans)\"\noutput: \n  html: \n    highlight: pygments\n    css: lab.css\n    preview-links: auto\n---\n\n\n### Load packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse) \n```\n:::\n\n\n::: callout-warning\nYour numbers/output may differ based on the version of the storms dataset that you have/used to complete. The logic will follow what you see here. This is expected behavior.\n:::\n\n### Exercise 1\n\nHow many *unique* *hurricanes* are included in this dataset?\n\n(Note the specific value may differ based on the version of the dataset you're using, but the code would not change.)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn_unique <- storms |> \n  filter(status == \"hurricane\") |>\n  distinct(name, year, .keep_all = TRUE) |>\n  count() |>\n  pull(n)\n\n# OR\n\nstorms |> \n  filter(status == \"hurricane\") |>\n  group_by(year, name) |> \n  count() |>\n  nrow()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 310\n```\n\n\n:::\n:::\n\n\nThere are 310 unique hurricanes.\n\n(Note that we need to group by name \\*and\\* year, as certain storms have the same name\\...in different years. There might still be instances where the same storm is double-counted if it extends from December into January, which if you accounted for, excellent work!)\n\n### Exercise 2\n\n**Note**: If you used `storms` on datahub, the `ts_diameter` column has missing information and were likely unable to complete this question. Otherwise...this would have been the approach...\n\nWhich tropical storm affected the largest area experiencing tropical storm strength winds? And, what was the maximum sustained wind speed for that storm?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstorms |> \n  filter(status == \"tropical storm\", \n         !is.na(ts_diameter)) |> \n  slice_max(ts_diameter)\n```\n:::\n\n\nOR\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstorms |>\n  filter(status == \"tropical storm\",\n         !is.na(ts_diameter)) |> \n  filter(ts_diameter == max(ts_diameter, na.rm=TRUE))\n```\n:::\n\n\nSandy (2012) had the largest area affected.\n\n### Exercise 3\n\nAmong all storms in this dataset, in which month are storms most common? Does this depend on the status of the storm? (In other words, are hurricanes more common in certain months than tropical depressions? or tropical storms?)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# most common month\nstorms |> \n  distinct(name, year, .keep_all=TRUE) |>\n  group_by(month) |>\n  summarise(n = n()) |> # could alternatively use count() here\n  arrange(desc(n))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 2\n   month     n\n   <dbl> <int>\n 1     9   208\n 2     8   173\n 3    10    99\n 4     7    67\n 5     6    41\n 6    11    29\n 7     5    13\n 8    12     5\n 9     1     2\n10     4     2\n```\n\n\n:::\n:::\n\n\nSeptember is the most common month.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# depend on status?\nstorms |> \n  group_by(status, month) |>\n  summarise(n = n()) |> # could alternatively use count() here\n  slice_max(n)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'status'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 9 × 3\n# Groups:   status [9]\n  status                 month     n\n  <fct>                  <dbl> <int>\n1 disturbance                7    45\n2 extratropical              9   732\n3 hurricane                  9  2380\n4 other low                  9   446\n5 subtropical depression     8    36\n6 subtropical storm          9    72\n7 tropical depression        9  1315\n8 tropical storm             9  2448\n9 tropical wave              8    55\n```\n\n\n:::\n:::\n\n\nIt does not depend on status. September is the most common for all three storm types.\n\n### Exercise 4\n\nYour boss asks for the name, year, and status of all category 5 storms that have happened in the 2000s. Carry out the operations that would deliver what they're looking for.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstorms |>\n  filter(category == 5,\n         between(year, 2000, 2009)) |>\n  select(name, year, status) |>\n  distinct(name, year, .keep_all=TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8 × 3\n  name     year status   \n  <chr>   <dbl> <fct>    \n1 Isabel   2003 hurricane\n2 Ivan     2004 hurricane\n3 Emily    2005 hurricane\n4 Katrina  2005 hurricane\n5 Rita     2005 hurricane\n6 Wilma    2005 hurricane\n7 Dean     2007 hurricane\n8 Felix    2007 hurricane\n```\n\n\n:::\n:::\n\n\n### Exercise 5\n\nFilter these data to only include storms that occurred during *your* lifetime (your code and results may differ from your classmates!). Among storms that have occurred during your lifetime, what's the mean and median air pressure across all measurements taken?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_storms <- storms |>\n  filter(between(year, 1988, 2023)) # alternatively filter(year >= 1988)\n\nmy_storms |>\n  summarise(median_pressure = median(pressure),\n            mean_pressure = mean(pressure))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 2\n  median_pressure mean_pressure\n            <dbl>         <dbl>\n1            1000          993.\n```\n\n\n:::\n:::\n\n\n-   Median: 999 millibars\n-   Mean: 991 millibars\n\n### Exercise 6\n\nWhich decade (of the storms included in the dataset) had the largest number of unique reported storms?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstorms |> \n  distinct(name, year) |>\n  mutate(decade = year - year %% 10) |> # there are MANY different ways to approach this!\n  group_by(decade) |>\n  count()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 2\n# Groups:   decade [6]\n  decade     n\n   <dbl> <int>\n1   1970    40\n2   1980    90\n3   1990   127\n4   2000   169\n5   2010   163\n6   2020    50\n```\n\n\n:::\n:::\n\n\nThe 2000s.\n\n(Note: we want to be sure to only count each storm once. Could also `arrange` by `desc(n)` to have 2000 at top.)\n\n### Exercise 7\n\nAmong the subset of storms occurring in your lifetime, which storm lasted the longest? Include your code and explain your answer.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_storms |>  \n  group_by(name, year) |> \n  count() |> \n  arrange(desc(n))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 532 × 3\n# Groups:   name, year [532]\n   name      year     n\n   <chr>    <dbl> <int>\n 1 Nadine    2012    96\n 2 Ivan      2004    94\n 3 Kyle      2002    90\n 4 Leslie    2018    89\n 5 Paulette  2020    88\n 6 Alberto   2000    87\n 7 Jose      2017    85\n 8 Nicholas  2003    80\n 9 Florence  2018    79\n10 Marilyn   1995    79\n# ℹ 522 more rows\n```\n\n\n:::\n:::\n\n\nNadine lasted the longest (unless you were born after 2012).\n\n(Note: The logic here is that storms are reported every six hours, per the description of the dataset, so the storm that has the most rows/entries would have lasted the longest)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}