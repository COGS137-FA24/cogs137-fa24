{
  "hash": "b9827939216ade5bba11b39f66e4eebe",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"01-intro-to-r\"\nauthor: \"Professor Shannon Ellis\"\ndate: \"2023-10-03\"\n\nformat:\n  html: \n    output-file: 01-intro-to-r.html\n  revealjs:\n    output-file: 01-intro-to-r-slides.html\n    slide-number: true\n    chalkboard: false\n    preview-links: auto\n    logo: images/cogs137-logo-hex.png\n    # css: slides.css\n    scrollable: true\n    footer: <https://cogs137.github.io/website/>\n    execute:\n     echo: true\n     output: true\n---\n\n\n# Introduction to R {background-color=\"#92A86A\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n:::\n:::\n\n\n## \\[ad\\] Computing Paths\n\n![[https://computingpaths.ucsd.edu/]()](images/01/computing_paths.png)\n\n## \\[ad\\] The Basement\n\n![](images/01/basement.png)\n\n## \\[ad\\] CALPIRG\n\n::: {style=\"font-size: 0.5em\"}\nAPPLY NOW: Protect the environment and make social change\n\nCALPIRG Students is a student organization here that works to protect the environment, make college more affordable, and promote civic engagement. Last Fall we helped nearly 10,000 students register to vote in California and got the UCs to release new policy to phase out single-use plastics to protect our oceans! SIGN UP TO HELP NOW\n\nNow, we are working to tackle the biggest problem facing our generation - climate change. Coming off another record-setting summer of hot temperatures, it’s clear we need to take strong, swift action to reduce the impacts of climate change. That’s why we are building support from students across the state to call for 100% clean energy UC-wide - for cars, buses, buildings, lights, and more! Fill out this interest form to learn more!\n\nAs a volunteer or intern with CALPIRG you can:\n\nWork with the media and help organize events like a Solar-Powered Concert and climate week of action\n\nIncrease voting accessibility and voter turnout in elections\n\nBring down the cost of textbooks\n\nProtect wildlife like whales and sea otters in the Pacific\n\nAnd more!\n:::\n\n## Q&A {.scrollable .smaller}\n\nQ: How are groups formed for the projects?\\\nA: I form them randomly for the two case studies and students get to choose their own groups for the final project.\n\nQ: I'm curious about what the workload would be like for the case studies.\\\nA: We'll discuss this when the time comes in detail but for now, students are presented with *a lot* of the starter code for the case studies. You and your group mates have to get teh code running, add explanations, and \"extend\" the case study, meaning add something meaningful onto what was presented.\n\nQ: Will this course go into advanced topics in tidyverse?\\\nA: We will certainly go beyond the basic `dplyr` verbs and cover multiple packages in the tidyverse, but we won't be able to cover everything.\n\nQ: Would it be possible to have access to the third Case Study just to work on our own time?\\\nA: Yup! I'll you all in the direction of [OpenCaseStudies](https://www.opencasestudies.org/), which is a resource I'll be using for 1 of the 2 case studies this quarter, and that we used for all case studies previously.\n\nQ: How many homework assignments are there? Some slides said 3, some said 4.\\\nA: Apologies. There are 3. (There were previously 4 but I removed one. Slides have been updated.)\n\nQ: Could we just sit in for lectures? Can I keep watching lectures?\\\nA: Yup - this would be fine, so long as everyone enrolled had a seat. And, the podcasts are open to anyone!\n\nQ: If we decide to do our projects and homework locally, how can we download/install the packages necessary for it?\\\nA: This is covered in your first lab!\n\nQ: I'm generally curious on how the language R is used in real world settings after college. What are its specific uses and what are the better ways to learn the language to maximize its utility. Also, how does this language differ from python in the data science realm.\\\nA: Great question that we'll cover throughout the course. However, breifly here, R is most heavily used by individuals who do more statistics, who work in biology, psychology or economics, and/or who analyze data regularly.\n\nQ: What is the advantage of using R over other programming languages to do data science tasks? How much is R used for data science in the real world?\\\nA: Within the tidyverse and in RStudio, the advantage is the cohesiveness of the tools - once you gain familiarity you can often intuit how to use another tool in the tidyverse. R is used for data science across *tons* of companies; however, across industries. its use is *not* as widespread as Python.\n\n## Course Announcements\n\n**Due Dates**:\n\n-   Student survey \"due\" today 11:59 PM\n-   **Lab 01** due Friday (11:59 PM)\n-   Lecture Participation survey \"due\" after class\n\n**Waitlist (Non)Update**: Staff are seeing what options there are. A few people got an email from Kasey Chiang (k4chiang\\@ucsd.edu) to drop and then enroll. This is legitimate. Follow those instructions.\n\n## Agenda\n\n1.  Variables\n2.  Operators\n3.  Data in R\n4.  RMarkdown\n\n# Variables & Assignment {background-color=\"#92A86A\"}\n\n## Variables & Assignment\n\nVariables are how we store information so that we can access it later.\n\n. . .\n\nVariables are created and stored using the assignment operator `<-`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfirst_variable <- 3\n```\n:::\n\n\nThe above stores the value 3 in the variable `first_variable`\n\n. . .\n\nNote: Other programming languages use `=` for assignment. R *also* uses that for assignment, but it is more typical to see `<-` in R code, so we'll stick with that.\n\n. . .\n\nThis means that if we ever want to reference the information stored in that variable later, we can \"call\" (mean, type in our code) the variable's name:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfirst_variable\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3\n```\n\n\n:::\n:::\n\n\n## Variable Type\n\n-   Every variable you create in R will be of a specific type.\n\n. . .\n\n-   The type of the variable is determined dynamically on assignment.\n\n. . .\n\n-   Determining the type of a variable with `class()`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(first_variable)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"numeric\"\n```\n\n\n:::\n:::\n\n\n## Basic Variable Types\n\n| Variable Type | Explanation                       | Example                                     |\n|-------------------|-----------------------|-------------------------------|\n| character     | stores a string                   | `\"cogs137\"`, `\"hi!\"`                        |\n| numeric       | stores whole numbers and decimals | `9`, `9.29`                                 |\n| integer       | specifies integer                 | `9L` (the `L` specifies this is an integer) |\n| logical       | Booleans                          | `TRUE`, `FALSE`                             |\n| list          | store multiple elements           | `list(7, \"a\", TRUE)`                        |\n\nNote: There are many more. We'll get to some but not all in this course.\n\n## logical & character\n\n**logical** - Boolean values `TRUE` and `FALSE`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"logical\"\n```\n\n\n:::\n:::\n\n\n. . .\n\n**character** - character strings\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(\"hello\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"character\"\n```\n\n\n:::\n\n```{.r .cell-code}\nclass('students') # equivalent...but we'll use double quotes!\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"character\"\n```\n\n\n:::\n:::\n\n\n. . .\n\n## numeric: double & integer\n\n**double** - floating point numerical values (default numerical type)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(1.335)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"numeric\"\n```\n\n\n:::\n\n```{.r .cell-code}\nclass(7)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"numeric\"\n```\n\n\n:::\n:::\n\n\n. . .\n\n**integer** - integer numerical values (indicated with an `L`)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(7L)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"integer\"\n```\n\n\n:::\n:::\n\n\n. . .\n\n## lists\n\nSo far, every variable has been an **atomic vector**, meaning it only stores a single piece of information.\n\n. . .\n\n**Lists** are 1d objects that can contain any combination of R objects\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nmylist <- list(\"A\", 7L, TRUE, 18.4)\nmylist\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n[1] \"A\"\n\n[[2]]\n[1] 7\n\n[[3]]\n[1] TRUE\n\n[[4]]\n[1] 18.4\n```\n\n\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(mylist)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nList of 4\n $ : chr \"A\"\n $ : int 7\n $ : logi TRUE\n $ : num 18.4\n```\n\n\n:::\n:::\n\n:::\n:::\n\n## Your Turn\n\nDefine variables of each of the following types: character, numeric, integer, logical, list\n\n::: aside\nPut a <font color=\"#32cb31\">green</font> sticky on the front of your computer when you're done. Put a <font color=\"#ff65a3\">pink</font> if you want help/have a question.\n:::\n\n## Functions\n\n-   `class()` (and `View()` & `median()`) were our first functions...but we'll show a few more.\n\n. . .\n\n-   Functions are (most often) verbs, followed by what they will be applied to in parentheses.\n\n. . .\n\nFunctions are:\n\n-   available from base R\n-   available from packages you import\n-   defined by you\n\n. . .\n\nWe'll start by getting comfortable with available functions, but in a few days, you'll learn how to write your own!\n\n## Helpful Functions\n\n::: columns\n::: {.column width=\"50%\"}\n-   `class()` - determine high-level variable type\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(mylist)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"list\"\n```\n\n\n:::\n:::\n\n\n-   `length()`- determine how long an object is\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# contains 4 elements\nlength(mylist)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4\n```\n\n\n:::\n:::\n\n:::\n\n::: {.column width=\"40%\"}\n-   `str()` - display the structure of an R object\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(mylist)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nList of 4\n $ : chr \"A\"\n $ : int 7\n $ : logi TRUE\n $ : num 18.4\n```\n\n\n:::\n:::\n\n:::\n:::\n\n## Coercion\n\nR is a dynamically typed language -- it will happily convert between the various types without complaint.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nc(1, \"Hello\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"1\"     \"Hello\"\n```\n\n\n:::\n\n```{.r .cell-code}\nc(FALSE, 3L)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0 3\n```\n\n\n:::\n\n```{.r .cell-code}\nc(1.2, 3L)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.2 3.0\n```\n\n\n:::\n:::\n\n\n## Missing Values\n\nR uses `NA` to represent missing values in its data structures.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(NA)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"logical\"\n```\n\n\n:::\n:::\n\n\n. . .\n\n### Other Special Values\n\n`NaN` \\| Not a number\n\n`Inf` \\| Positive infinity\n\n`-Inf` \\| Negative infinity\n\n## Activity\n\n[What is the type of the following vectors? Chat about why they have that type.]{style=\"background-color: ##e94f58\"}\n\n-   `c(1, NA+1L, \"C\")`\n-   `c(1L / 0, NA)`\n-   `c(1:3, 5)`\n-   `c(3L, NaN+1L)`\n-   `c(NA, TRUE)`\n\n::: aside\nPut a <font color=\"#32cb31\">green</font> sticky on the front of your computer when you're done. Put a <font color=\"#ff65a3\">pink</font> if you want help/have a question.\n:::\n\n# Operators {background-color=\"#92A86A\"}\n\n## Operators\n\nAt its simplest, R is a calculator. To carry out mathematical operations, R uses **operators**.\n\n## Arithmetic Operators\n\n| Operator    | Description                   |\n|-------------|-------------------------------|\n| `+`         | addition                      |\n| `-`         | subtraction                   |\n| `*`         | multiplication                |\n| `/`         | division                      |\n| `^` or `**` | exponentiation                |\n| `x %% y`    | modulus (x mod y) `9%%2` is 1 |\n| `x %/% y`   | integer division `9%/%2` is 4 |\n\n## Arithmetic Operators: Examples\n\n\n::: {.cell}\n\n```{.r .cell-code}\n7 + 6  \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 13\n```\n\n\n:::\n\n```{.r .cell-code}\n2 - 3\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -1\n```\n\n\n:::\n\n```{.r .cell-code}\n4 * 2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 8\n```\n\n\n:::\n\n```{.r .cell-code}\n9 / 2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4.5\n```\n\n\n:::\n:::\n\n\n## Reminder\n\nOutput can be stored to a variable\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_addition <- 7 + 6\n```\n:::\n\n\n. . .\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_addition\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 13\n```\n\n\n:::\n:::\n\n\n## Comparison Operators\n\nThese operators return a Boolean.\n\n| Operator | Description              |\n|----------|--------------------------|\n| `<`      | less than                |\n| `<=`     | less than or equal to    |\n| `>`      | greater than             |\n| `>=`     | greater than or equal to |\n| `==`     | exactly equal to         |\n| `!=`     | not equal to             |\n\n## Comparison Operators: Examples\n\n\n::: {.cell}\n\n```{.r .cell-code}\n4 < 12\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\n4 >= 3\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\n6 == 6\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\n7 != 6\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n:::\n\n\n## Your Turn\n\nUse arithmetic and comparison operators to store the value 30 in the variable `var_30` and `TRUE` in the variable `true_var`.\n\n::: aside\nPut a <font color=\"#32cb31\">green</font> sticky on the front of your computer when you're done. Put a <font color=\"#ff65a3\">pink</font> if you want help/have a question.\n:::\n\n# R Packages {background-color=\"#92A86A\"}\n\n## Packages\n\n-   Packages are installed with the `install.packages` function and loaded with the `library` function, once per session:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"package_name\")\nlibrary(package_name)\n```\n:::\n\n\n. . .\n\nIn this course, most packages we'll use have been installed for you already on datahub, so you will only have to load the package in (using `library`).\n\n# Data \"sets\"\n\n## Data \"sets\" in R {.scrollable .smaller}\n\n-   \"set\" is in quotation marks because it is not a formal data class\n\n-   A tidy data \"set\" can be one of the following types:\n\n    -   `tibble`\n    -   `data.frame`\n\n-   We'll often work with `tibble`s:\n\n    -   `readr` package (e.g. `read_csv` function) loads data as a `tibble` by default\n    -   `tibble`s are part of the tidyverse, so they work well with other packages we are using\n    -   they make minimal assumptions about your data, so are less likely to cause hard to track bugs in your code\n\n## Data frames\n\n-   A data frame is the most commonly used data structure in R, they are list of equal length vectors (usually atomic, but can be generic). Each vector is treated as a column and elements of the vectors as rows.\n\n-   A tibble is a type of data frame that ... makes your life (i.e. data analysis) easier.\n\n-   Most often a data frame will be constructed by reading in from a file, but we can create them from scratch.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- tibble(x = 1:3, y = c(\"a\", \"b\", \"c\"))\nclass(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n```\n\n\n:::\n\n```{.r .cell-code}\nglimpse(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 3\nColumns: 2\n$ x <int> 1, 2, 3\n$ y <chr> \"a\", \"b\", \"c\"\n```\n\n\n:::\n:::\n\n\n## Data frames (cont.)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nattributes(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$class\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n\n$row.names\n[1] 1 2 3\n\n$names\n[1] \"x\" \"y\"\n```\n\n\n:::\n:::\n\n\n. . .\n\nColumns (variables) in data frames are accessed with `$`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndataframe$var_name\n```\n:::\n\n\n. . .\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(df$x)  # access variable type for column\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"integer\"\n```\n\n\n:::\n\n```{.r .cell-code}\nclass(df$y)  \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"character\"\n```\n\n\n:::\n:::\n\n\n## Variable Types\n\nData stored in columns can include different *kinds* of information...which would require a different *type* (`class`) of variable to be used in R.\n\n::: columns\n::: {.column width=\"50%\"}\n![](images/01/continuous_discrete.png)\n:::\n\n::: {.column width=\"50%\"}\nR Data Types:\n\n-   **Continuous**: numeric, integer\n-   **Discrete**: factors (we haven't talked about these yet, but will today!)\n:::\n:::\n\n::: aside\nArtwork by [\\@allison_horst](https://github.com/allisonhorst/stats-illustrations/) <a href=\"https://twitter.com/allison_horst\" title=\"allison_horst\"><i class=\"fa fa-twitter\"></i></a>\n:::\n\n## Variable Types (cont.)\n\nSometimes data are non-numeric and store words. Even when that is the case, the data can be conveying different information.\n\n::: columns\n::: {.column width=\"50%\"}\n![](images/01/nominal_ordinal_binary.png)\n:::\n\n::: {.column width=\"50%\"}\nR Data Types:\n\n-   **Nominal**: character\n-   **Ordinal**: factors\n-   **Binary**: logical OR numeric OR factors 😱\n:::\n:::\n\n::: aside\nArtwork by [\\@allison_horst](https://github.com/allisonhorst/stats-illustrations/) <a href=\"https://twitter.com/allison_horst\" title=\"allison_horst\"><i class=\"fa fa-twitter\"></i></a>\n:::\n\n## Example: Cat lovers\n\nA survey asked respondents their name and number of cats. The instructions said to enter the number of cats as a numerical value.\n\n. . .\n\n[🚨 There is code ahead that we're not going to discuss in detail today, *but* we will in coming lectures.]{style=\"background-color: ##e94f58\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncat_lovers <- read_csv(\"https://raw.githubusercontent.com/COGS137/datasets/main/cat-lovers.csv\")\n```\n:::\n\n\n## The Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncat_lovers |>\n  datatable()\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-2bd029862563d15df98f\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-2bd029862563d15df98f\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\",\"52\",\"53\",\"54\",\"55\",\"56\",\"57\",\"58\",\"59\",\"60\"],[\"Bernice Warren\",\"Woodrow Stone\",\"Willie Bass\",\"Tyrone Estrada\",\"Alex Daniels\",\"Jane Bates\",\"Latoya Simpson\",\"Darin Woods\",\"Agnes Cobb\",\"Tabitha Grant\",\"Perry Cross\",\"Wanda Silva\",\"Alicia Sims\",\"Emily Logan\",\"Woodrow Elliott\",\"Brent Copeland\",\"Pedro Carlson\",\"Patsy Luna\",\"Brett Robbins\",\"Oliver George\",\"Calvin Perry\",\"Lora Gutierrez\",\"Charlotte Sparks\",\"Earl Mack\",\"Leslie Wade\",\"Santiago Barker\",\"Jose Bell\",\"Lynda Smith\",\"Bradford Marshall\",\"Irving Miller\",\"Caroline Simpson\",\"Frances Welch\",\"Melba Jenkins\",\"Veronica Morales\",\"Juanita Cunningham\",\"Maurice Howard\",\"Teri Pierce\",\"Phil Franklin\",\"Jan Zimmerman\",\"Leslie Price\",\"Bessie Patterson\",\"Ethel Wolfe\",\"Naomi Wright\",\"Sadie Frank\",\"Lonnie Cannon\",\"Tony Garcia\",\"Darla Newton\",\"Ginger Clark\",\"Lionel Campbell\",\"Florence Klein\",\"Harriet Leonard\",\"Terrence Harrington\",\"Travis Garner\",\"Doug Bass\",\"Pat Norris\",\"Dawn Young\",\"Shari Alvarez\",\"Tamara Robinson\",\"Megan Morgan\",\"Kara Obrien\"],[\"0\",\"0\",\"1\",\"3\",\"3\",\"2\",\"1\",\"1\",\"0\",\"0\",\"0\",\"0\",\"1\",\"3\",\"3\",\"2\",\"1\",\"1\",\"0\",\"0\",\"1\",\"1\",\"0\",\"0\",\"4\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"1\",\"3\",\"3\",\"2\",\"1\",\"1.5 - honestly I think one of my cats is half human\",\"0\",\"0\",\"0\",\"0\",\"1\",\"three\",\"1\",\"1\",\"1\",\"0\",\"0\",\"2\"],[\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"ambidextrous\",\"ambidextrous\",\"ambidextrous\",\"ambidextrous\",\"ambidextrous\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>name<\\/th>\\n      <th>number_of_cats<\\/th>\\n      <th>handedness<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n## The Question\n\n[How many respondents have a below average number of cats?]{style=\"background-color: #ADD8E6\"}\n\n. . .\n\n**Giving it a first shot...**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncat_lovers |>\n  summarise(mean = mean(number_of_cats))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: There was 1 warning in `summarise()`.\nℹ In argument: `mean = mean(number_of_cats)`.\nCaused by warning in `mean.default()`:\n! argument is not numeric or logical: returning NA\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n   mean\n  <dbl>\n1    NA\n```\n\n\n:::\n:::\n\n\n. . .\n\n[💡 maybe there is missing data in the `number_of_cats` column!]{style=\"background-color: #ADD8E6\"}\n\n**Oh why will you *still* not work??!!**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncat_lovers |>\n  summarise(mean_cats = mean(number_of_cats, na.rm = TRUE))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: There was 1 warning in `summarise()`.\nℹ In argument: `mean_cats = mean(number_of_cats, na.rm = TRUE)`.\nCaused by warning in `mean.default()`:\n! argument is not numeric or logical: returning NA\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n  mean_cats\n      <dbl>\n1        NA\n```\n\n\n:::\n:::\n\n\n. . .\n\n[💡What is the **type** of the `number_of_cats` variable?]{style=\"background-color: #ADD8E6\"}\n\n## Take a breath and look at your data\n\n. . .\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(cat_lovers)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 60\nColumns: 3\n$ name           <chr> \"Bernice Warren\", \"Woodrow Stone\", \"Willie Bass\", \"Tyro…\n$ number_of_cats <chr> \"0\", \"0\", \"1\", \"3\", \"3\", \"2\", \"1\", \"1\", \"0\", \"0\", \"0\", …\n$ handedness     <chr> \"left\", \"left\", \"left\", \"left\", \"left\", \"left\", \"left\",…\n```\n\n\n:::\n:::\n\n\n## Let's take another look\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-2b4ab8b8f93589581d8e\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-2b4ab8b8f93589581d8e\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\",\"52\",\"53\",\"54\",\"55\",\"56\",\"57\",\"58\",\"59\",\"60\"],[\"Bernice Warren\",\"Woodrow Stone\",\"Willie Bass\",\"Tyrone Estrada\",\"Alex Daniels\",\"Jane Bates\",\"Latoya Simpson\",\"Darin Woods\",\"Agnes Cobb\",\"Tabitha Grant\",\"Perry Cross\",\"Wanda Silva\",\"Alicia Sims\",\"Emily Logan\",\"Woodrow Elliott\",\"Brent Copeland\",\"Pedro Carlson\",\"Patsy Luna\",\"Brett Robbins\",\"Oliver George\",\"Calvin Perry\",\"Lora Gutierrez\",\"Charlotte Sparks\",\"Earl Mack\",\"Leslie Wade\",\"Santiago Barker\",\"Jose Bell\",\"Lynda Smith\",\"Bradford Marshall\",\"Irving Miller\",\"Caroline Simpson\",\"Frances Welch\",\"Melba Jenkins\",\"Veronica Morales\",\"Juanita Cunningham\",\"Maurice Howard\",\"Teri Pierce\",\"Phil Franklin\",\"Jan Zimmerman\",\"Leslie Price\",\"Bessie Patterson\",\"Ethel Wolfe\",\"Naomi Wright\",\"Sadie Frank\",\"Lonnie Cannon\",\"Tony Garcia\",\"Darla Newton\",\"Ginger Clark\",\"Lionel Campbell\",\"Florence Klein\",\"Harriet Leonard\",\"Terrence Harrington\",\"Travis Garner\",\"Doug Bass\",\"Pat Norris\",\"Dawn Young\",\"Shari Alvarez\",\"Tamara Robinson\",\"Megan Morgan\",\"Kara Obrien\"],[\"0\",\"0\",\"1\",\"3\",\"3\",\"2\",\"1\",\"1\",\"0\",\"0\",\"0\",\"0\",\"1\",\"3\",\"3\",\"2\",\"1\",\"1\",\"0\",\"0\",\"1\",\"1\",\"0\",\"0\",\"4\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"1\",\"3\",\"3\",\"2\",\"1\",\"1.5 - honestly I think one of my cats is half human\",\"0\",\"0\",\"0\",\"0\",\"1\",\"three\",\"1\",\"1\",\"1\",\"0\",\"0\",\"2\"],[\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"right\",\"ambidextrous\",\"ambidextrous\",\"ambidextrous\",\"ambidextrous\",\"ambidextrous\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>name<\\/th>\\n      <th>number_of_cats<\\/th>\\n      <th>handedness<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n## Sometimes you need to babysit your respondents\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncat_lovers |>\n  mutate(number_of_cats = case_when(\n    name == \"Ginger Clark\" ~ 2,\n    name == \"Doug Bass\"    ~ 3,\n    TRUE                   ~ as.numeric(number_of_cats))) \n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `number_of_cats = case_when(...)`.\nCaused by warning:\n! NAs introduced by coercion\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 60 × 3\n   name           number_of_cats handedness\n   <chr>                   <dbl> <chr>     \n 1 Bernice Warren              0 left      \n 2 Woodrow Stone               0 left      \n 3 Willie Bass                 1 left      \n 4 Tyrone Estrada              3 left      \n 5 Alex Daniels                3 left      \n 6 Jane Bates                  2 left      \n 7 Latoya Simpson              1 left      \n 8 Darin Woods                 1 left      \n 9 Agnes Cobb                  0 left      \n10 Tabitha Grant               0 left      \n# ℹ 50 more rows\n```\n\n\n:::\n:::\n\n\n## Always respect (& check!) data types\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncat_lovers |>\n  mutate(number_of_cats = case_when(\n         name == \"Ginger Clark\" ~ \"2\",\n         name == \"Doug Bass\"    ~ \"3\",\n         TRUE                   ~ number_of_cats),\n         number_of_cats = as.numeric(number_of_cats)) |>\n  summarise(mean_cats = mean(number_of_cats))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n  mean_cats\n      <dbl>\n1     0.817\n```\n\n\n:::\n:::\n\n\n## Now that we know what we're doing...\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncat_lovers <- cat_lovers |>\n  mutate(number_of_cats = case_when(\n         name == \"Ginger Clark\" ~ \"2\",\n         name == \"Doug Bass\"    ~ \"3\",\n         TRUE                   ~ number_of_cats),\n         number_of_cats = as.numeric(number_of_cats))\n```\n:::\n\n\n... store your data in a variable (here we're overwriting the old `cat_lovers` tibble).\n\n## Moral of the story\n\n-   If your data does not behave how you expect it to, type coercion upon reading in the data might be the reason.\n\n-   Go in and investigate your data, apply the fix, *save your data*, live happily ever after.\n\n# R Markdown {background-color=\"#92A86A\"}\n\n## R Markdown: tour\n\n<center>\\[DEMO\\]</center>\n\nBefore we move on...\n\n[<i class=\"fa fa-user\" aria-hidden=\"true\"></i>   What is the Bechdel test?]{style=\"background-color: #ADD8E6\"}\n\n. . .\n\nThe Bechdel test asks whether a work of fiction features at least two women who talk to each other about something other than a man, and there must be two women named characters.\n\n. . .\n\nConcepts introduced:\n\n-   Knitting documents\n-   R Markdown and (some) R syntax\n\n## GitHub Setup\n\nSee this week's lab...\n\n::: aside\nPut a <font color=\"#32cb31\">green</font> sticky on the front of your computer when you're done. Put a <font color=\"#ff65a3\">pink</font> if you want help/have a question.\n:::\n\n## Giving the demo a go...\n\n1.  Navigate to the demo URL (on Canvas)\n2.  Accept the \"assignment\" (this is NOT graded)\n3.  Clone the repo\n4.  Edit the document\n5.  Knit the document\n6.  Push your changes\n\nTry to play around with this after finishing your lab tomorrow!\n\n## Recap {.smaller .scrollable background-color=\"#92A86A\"}\n\n-   Always best to think of data as part of a tibble\n    -   This plays nicely with the `tidyverse` as well\n    -   Rows are observations, columns are variables\n-   What are the common variable types in R\n    -   How do I create a variable of each type?\n    -   When would I use each one?\n-   Do I know how to determine the class/type of a variable?\n-   Can I explain dynamic typing?\n-   Can I operate on variables and values using...\n    -   arithmetic operators?\n    -   comparison operators?\n-   What are dataframes/tibbles? and why are they useful?\n-   What is the difference between installing and loading a package?\n-   What are the components of an R Markdown file?\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/font-awesome-6.4.2/css/all.min.css\" rel=\"stylesheet\" />\n<link href=\"../../site_libs/font-awesome-6.4.2/css/v4-shims.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/htmlwidgets-1.6.2/htmlwidgets.js\"></script>\n<link href=\"../../site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/datatables-binding-0.29/datatables.js\"></script>\n<script src=\"../../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"../../site_libs/dt-core-1.13.4/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"../../site_libs/dt-core-1.13.4/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/dt-core-1.13.4/js/jquery.dataTables.min.js\"></script>\n<link href=\"../../site_libs/crosstalk-1.2.0/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/crosstalk-1.2.0/js/crosstalk.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}